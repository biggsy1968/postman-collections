{
	"info": {
		"_postman_id": "c0695cb1-8767-4a50-8410-4b54958b1f0f",
		"name": "Open Banking Merchant PISP Sandbox Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Partner Checkout Flow",
			"item": [
				{
					"name": "payments",
					"item": [
						{
							"name": "{payment Id}",
							"item": [
								{
									"name": "refunds",
									"item": [
										{
											"name": "Refund Payment",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "769e275e-3415-4379-9212-04aa49e0ca03",
														"exec": [
															"function randomString(length) {\r",
															"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
															"}\r",
															"pm.environment.set(\"idempotencyKeyRefund\", randomString(12));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "a569113d-cafc-4dd9-a5d3-5199af0b86c2",
														"exec": [
															"pm.environment.set(\"refundId\", JSON.parse(responseBody).data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Idempotency-Key",
														"value": "{{idempotencyKeyRefund}}",
														"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"refundAmount\": 99.10,\n    \"currency\": \"{{currency}}\",\n    \"compensationAmount\": null,\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\n    \"remittanceInformation\": {\n        \"reference\": null,\n        \"unstructured\": null\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrlTpp}}/payments/:paymentId/refunds",
													"host": [
														"{{baseUrlTpp}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds"
													],
													"variable": [
														{
															"description": "(Required) The ID of the payment which you want to refund",
															"key": "paymentId",
															"type": "string",
															"value": "{{paymentId}}"
														}
													]
												},
												"description": "Refund a payment using POST"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unprocessable Entity",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unsupported Media Type",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n \"data\": {\n  \"id\": \"azo4kal13b\",\n  \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n  \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"status\": \"REFUND_PENDING\",\n  \"refundAmount\": 100.01,\n  \"compensationAmount\": 10.01,\n  \"currency\": \"GBP\",\n  \"remittanceInformation\": {\n   \"reference\": \"reference\",\n   \"unstructured\": \"unstructuredRemittanceInfo\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"errorDetails\": null\n }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										},
										{
											"name": "List Payment Refunds",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrlTpp}}/payments/:paymentId/refunds?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrlTpp}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds"
													],
													"query": [
														{
															"key": "refundstatus",
															"value": "<string>,<string>",
															"description": "A number of statuses can be queried within a single request by providing multiple occurences of the parameter. If not provided all statuses will be returned",
															"disabled": true
														},
														{
															"key": "pagenumber",
															"value": "1",
															"description": "Page number"
														},
														{
															"key": "pagesize",
															"value": "20",
															"description": "Page size"
														}
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment for which you want to list refunds"
														}
													]
												},
												"description": "List refunds using GET"
											},
											"response": [
												{
													"name": "Ok",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/\",\n \"data\": [\n  {\n   \"id\": \"azo4kal13b\",\n   \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n   \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n   \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n   \"status\": \"REFUND_PENDING\",\n   \"refundAmount\": 100.01,\n   \"compensationAmount\": 10.01,\n   \"currency\": \"GBP\",\n   \"remittanceInformation\": {\n    \"reference\": \"reference\",\n    \"unstructured\": \"unstructuredRemittanceInfo\"\n   },\n   \"endToEndIdentification\": \"endToEndIdentification\",\n   \"errorDetails\": null\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										},
										{
											"name": "Retrieve Refund",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds",
														":refundId"
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment for which you want to retrieve details"
														},
														{
															"key": "refundId",
															"value": "{{refundId}}",
															"description": "(Required) The ID of the refund for which you want to retrieve details"
														}
													]
												},
												"description": "GET Refund details endpoint"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n \"data\": {\n  \"id\": \"azo4kal13b\",\n  \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n  \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"status\": \"REFUND_REJECTED\",\n  \"refundAmount\": 100.01,\n  \"compensationAmount\": 10.01,\n  \"currency\": \"GBP\",\n  \"remittanceInformation\": {\n   \"reference\": \"reference\",\n   \"unstructured\": \"unstructuredRemittanceInfo\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"errorDetails\": [\n   \"5008\",\n   \"5016\"\n  ]\n }\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Retrieve Payment",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{merchantApiKey}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrlTpp}}/payments/:paymentId",
											"host": [
												"{{baseUrlTpp}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId",
													"value": "{{paymentId}}",
													"description": "(Required) The ID of the payment for which you want to retrieve details"
												}
											]
										},
										"description": "GET Payment details endpoint"
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Retry-After",
													"value": "<integer>",
													"description": "Number in seconds to wait"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"/payments/7zmnaqgby5\",\n \"data\": {\n  \"id\": \"7zmnaqgby5\",\n  \"uri\": \"/payments/7zmnaqgby5\",\n  \"endToEndIdentification\": \"endToEndIdentification1234\",\n  \"debtorAccount\": null,\n  \"risk\": {\n   \"paymentContextCode\": null,\n   \"merchantCategoryCode\": null,\n   \"merchantCustomerIdentification\": null,\n   \"deliveryAddress\": null\n  },\n  \"remittanceInformation\": {\n   \"reference\": \"reference1234\",\n   \"unstructured\": null\n  },\n  \"status\": \"PENDING\",\n  \"amount\": 99.99,\n  \"currency\": \"GBP\",\n  \"countryCode\": \"GB\",\n  \"language\": \"en\",\n  \"email\": \"client@example.com\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 50\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 50\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 30\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": -5\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": 125\n    }\n   ]\n  },\n  \"integrationType\": \"CHECKOUT\",\n  \"merchantPostAuthUrl\": null,\n  \"bankId\": null,\n  \"aspspAuthUrl\": null,\n  \"cutOffDateTime\": null,\n  \"expectedExecutionDateTime\": null,\n  \"expectedSettlementDateTime\": null,\n  \"merchantId\": \"gabxwwv2l5\",\n  \"creationDateTime\": \"2020-05-01T12:19:17.069Z\",\n  \"debtorBankName\": null,\n  \"multiAuthorisation\": null,\n  \"links\": [\n   {\n    \"id\": \"7zmnaqgby5\",\n    \"resourceType\": \"refunds\",\n    \"uri\": \"/payments/7zmnaqgby5/refunds\"\n   },\n   {\n    \"id\": \"7zmnaqgby5\",\n    \"resourceType\": \"history\",\n    \"uri\": \"/payments/7zmnaqgby5/history\"\n   }\n  ]\n }\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										}
									]
								},
								{
									"name": "Retrieve Payment  History",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{merchantApiKey}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrlTpp}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrlTpp}}"
											],
											"path": [
												"payments",
												":paymentId",
												"history"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1",
													"description": "Page number"
												},
												{
													"key": "pagesize",
													"value": "20",
													"description": "Page size"
												}
											],
											"variable": [
												{
													"key": "paymentId",
													"value": "{{paymentId}}",
													"description": "(Required) The ID of the payment who's history you with to return"
												}
											]
										},
										"description": "Retrieve Payment History"
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Retry-After",
													"value": "<integer>",
													"description": "Number in seconds to wait"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0001\",\n  \"description\": \"Page Number is invalid\",\n  \"field\": \"page\"\n }\n}"
										},
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"/payments/ybo8zayk2q/history\",\n \"data\": [\n  {\n   \"status\": \"PENDING\",\n   \"createDateTime\": \"2019-02-28T10:43:07+00:00\"\n  },\n  {\n   \"status\": \"PENDING_APPROVAL\",\n   \"createDateTime\": \"2019-02-28T10:44:07+01:00\"\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": null\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5922a44-39b7-4eed-a002-c0049723919c",
										"exec": [
											"function randomString(length) {\r",
											"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
											"}\r",
											"pm.environment.set(\"endToEndIdentification\", randomString(31));\r",
											"pm.environment.set(\"reference\", randomString(18));\r",
											"pm.environment.set(\"idempotencyKeyPayments\", randomString(12));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "230b5912-eb38-477d-b2aa-dd9255f413c4",
										"exec": [
											"pm.environment.set(\"paymentId\", JSON.parse(responseBody).data.id);\r",
											"pm.environment.set(\"currency\", JSON.parse(responseBody).data.currency);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Idempotency-Key",
										"value": "{{idempotencyKeyPayments}}",
										"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": 99.10,\r\n    \"countryCode\": \"GB\",\r\n    \"currency\": \"GBP\",\r\n    \"language\": \"en\",\r\n    \"email\": \"johndoe@test.com\",\r\n    \"orderDetails\": {\r\n        \"items\": [\r\n            {\r\n                \"name\": \"Blue Jeans\",\r\n                \"description\": \"Wrangler Blue Jeans\",\r\n                \"quantity\": 1,\r\n                \"amount\": 89.10\r\n            },\r\n            {\r\n                \"name\": \"Hat\",\r\n                \"description\": \"Cowboy Hat\",\r\n                \"quantity\": 1,\r\n                \"amount\": 10\r\n            }\r\n        ]\r\n    },\r\n    \"integrationType\": \"CHECKOUT\",\r\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\r\n    \"bankId\": null,\r\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\r\n    \"remittanceInformation\": {\r\n        \"reference\": null,\r\n        \"unstructured\": \"Wrangler Combo\"\r\n    },\r\n    \"debtorAccount\": {\r\n        \"identification\": 60161331926819,\r\n        \"schemeName\": \"SortCodeAccountNumber\",\r\n        \"name\": \"John Doe\",\r\n        \"secondaryIdentification\": null\r\n    },\r\n    \"risk\": {\r\n        \"paymentContextCode\": \"BillPayment\",\r\n        \"merchantCategoryCode\": null,\r\n        \"merchantCustomerIdentification\": null\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{baseUrlTpp}}/payments",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "Create a payment request POST endpoint"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/re27gry2dw\",\n \"data\": {\n  \"id\": \"re27gry2dw\",\n  \"uri\": \"/payments/re27gry2dw\",\n  \"endToEndIdentification\": \"endToEndIdentification123\",\n  \"debtorAccount\": {\n   \"identification\": 60161331926819,\n   \"name\": null,\n   \"schemeName\": \"SortCodeAccountNumber\",\n   \"secondaryIdentification\": null\n  }\n },\n \"risk\": {\n  \"paymentContextCode\": \"Other\",\n  \"merchantCategoryCode\": null,\n  \"merchantCustomerIdentification\": null,\n  \"deliveryAddress\": null\n },\n \"remittanceInformation\": {\n  \"reference\": \"reference123\",\n  \"unstructured\": null\n },\n \"status\": \"PENDING_APPROVAL\",\n \"amount\": 99.99,\n \"currency\": \"GBP\",\n \"countryCode\": \"GB\",\n \"language\": \"en\",\n \"email\": \"client@example.com\",\n \"orderDetails\": {\n  \"items\": [\n   {\n    \"name\": \"Flights Outbound\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 50\n   },\n   {\n    \"name\": \"Flights Return\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 50\n   },\n   {\n    \"name\": \"Flights Return\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 30\n   },\n   {\n    \"name\": \"Discounts\",\n    \"description\": null,\n    \"quantity\": null,\n    \"amount\": -5\n   },\n   {\n    \"name\": \"Total\",\n    \"description\": null,\n    \"quantity\": null,\n    \"amount\": 125\n   }\n  ]\n },\n \"integrationType\": \"SELF_HOSTED\",\n \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n \"bankId\": \"lyboxy9bqp\",\n \"aspspAuthUrl\": \"https://any-aspsp.com/openbanking/authorize?response_type=code+id_token&scope=openid+payments&client_id=377aaa6a-70bf-4e95-ac19-2bac5270bacd&redirect_uri=https%3A%2F%2Fapi.nuapay.com%2Ftpp%2Fpayment-requests%2Foauth&state=df78b5f6-12c0-4646-b47c-4362217acb0a&nonce=bea92693-19da-4609-858e-86c79e908a08&request=eyJraWQiOiI2QlJZamgtc0VRUTNmNWlzc0lxWU9WNGNXdVUiLCJ0eXAiOiJKV1QiLCJhbGciOiJQUzI1NiJ9.eyJpc3MiOiIzNzdhYWE2YS03MGJmLTRlOTUtYWMxOS0yYmFjNTI3MGJhY2QiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsIm5vbmNlIjoiYmVhOTI2OTMtMTlkYS00NjA5LTg1OGUtODZjNzllOTA4YTA4IiwiY2xpZW50X2lkIjoiMzc3YWFhNmEtNzBiZi00ZTk1LWFjMTktMmJhYzUyNzBiYWNkIiwibWF4X2FnZSI6ODY0MDAsImF1ZCI6Imh0dHBzOlwvXC9hdXRob3Jpc2UtYXBpLmxsb3lkc2JhbmsuY28udWtcL3Byb2QwMVwvY2hhbm5lbFwvbHlkcyIsInNjb3BlIjoib3BlbmlkIHBheW1lbnRzIiwiY2xhaW1zIjp7InVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6IjY0YWQ5NWEwLWUzMWYtNGNiOC04NjM3LTdjOGRmOTc3MTJmOSIsImVzc2VudGlhbCI6dHJ1ZX19LCJpZF90b2tlbiI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiI2NGFkOTVhMC1lMzFmLTRjYjgtODYzNy03YzhkZjk3NzEyZjkiLCJlc3NlbnRpYWwiOnRydWV9LCJhY3IiOnsiZXNzZW50aWFsIjp0cnVlLCJ2YWx1ZXMiOlsidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwidXJuOm9wZW5iYW5raW5nOnBzZDI6Y2EiXX19fSwicmVkaXJlY3RfdXJpIjoiaHR0cHM6XC9cL2FwaS5udWFwYXkuY29tXC90cHBcL3BheW1lbnQtcmVxdWVzdHNcL29hdXRoIiwic3RhdGUiOiJkZjc4YjVmNi0xMmMwLTQ2NDYtYjQ3Yy00MzYyMjE3YWNiMGEiLCJleHAiOjE1NzU0NTg3MTYsImlhdCI6MTU3NTQ1ODQxNiwianRpIjoiNDQyYmY4N2YtYzIxNC00NjgxLTk3ODYtZjIwZGM1YjIzOWYxIn0.IyeHKQQeU6x32CdUllkskLFWEjkJZKzvp8D4ZOwtlN3v32qmbh4hkGtwNilqZetqqq1ESB1InzfyAlb5S3GyZ_1pTV5UmFqsY60w4jIvSVQXmxKyCYIDrdgTvfa3IYOtA3vStpRpnHyXZfke7mBLGM0nn3YLEmujQ88T1kzq8v9rKTUKwgAE-NYLsYnXNg8dNlrl_lvXVou-J26keS5EaYMVSwHRXcZ8Vp51Hro5L3Py5KyG270RL-7AfJCrEOcvwKbHWOYthoZj1FcuuJWoCT80H1rtkw80vI8QpaQHhp8xYOGft4n6uf2WBhUVb9eBrl9B0GtWe3opBeFXzOtKyg\",\n \"cutOffDateTime\": null,\n \"expectedExecutionDateTime\": null,\n \"expectedSettlementDateTime\": null,\n \"merchantId\": \"gabxwwv2l5\",\n \"creationDateTime\": \"2020-05-01T08:25:29.291Z\",\n \"debtorBankName\": \"Bank Name\",\n \"multiAuthorisation\": {\n  \"status\": null,\n  \"numberRequired\": null,\n  \"numberReceived\": null,\n  \"lastUpdateDateTime\": null,\n  \"expirationDateTime\": null\n },\n \"links\": [\n  {\n   \"id\": \"re27gry2dw\",\n   \"resourceType\": \"refunds\",\n   \"uri\": \"/payments/re27gry2dw/refunds\"\n  },\n  {\n   \"id\": \"re27gry2dw\",\n   \"resourceType\": \"history\",\n   \"uri\": \"/payments/re27gry2dw/history\"\n  }\n ]\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "List payments",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/payments?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "fromdatetime",
											"value": "<string>",
											"description": "Submission from date time in the format, 'yyyy-MM-dd'T'HH:mm:ss', maximum date from/to date range is 30 days. If neither from/to date is provided returns results for the last 30 days.",
											"disabled": true
										},
										{
											"key": "todatetime",
											"value": "<string>",
											"description": "Submission to date time in the format, 'yyyy-MM-dd'T'HH:mm:ss', maximum date from/to date range is 30 days. If neither from/to date is provided returns results for the last 30 days.",
											"disabled": true
										},
										{
											"key": "paymentstatus",
											"value": "<string>,<string>",
											"description": "A number of statuses can be queried within a single request by providing multiple occurences of the parameter. If not provided all statuses will be returned",
											"disabled": true
										},
										{
											"key": "payername",
											"value": "<string>",
											"description": "Payer name. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "payeremail",
											"value": "<string>",
											"description": "Payer e-mail. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "reference",
											"value": "<string>",
											"description": "Payment reference will attempt to match endToEndIdentification, remittanceInformation.reference and remittanceInformation.unstructured. Will return all matches and partial matches if using wildcard searches. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "<string>",
											"description": "Currency",
											"disabled": true
										},
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										}
									]
								},
								"description": "GET payments list endpoint"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments\",\n \"data\": [\n  {\n   \"id\": \"7zmnaqgby5\",\n   \"uri\": \"/payments/7zmnaqgby5\",\n   \"endToEndIdentification\": \"endToEndIdentification1234\",\n   \"debtorAccount\": null,\n   \"risk\": {\n    \"paymentContextCode\": null,\n    \"merchantCategoryCode\": null,\n    \"merchantCustomerIdentification\": null,\n    \"deliveryAddress\": null\n   },\n   \"remittanceInformation\": {\n    \"reference\": \"reference1234\",\n    \"unstructured\": null\n   },\n   \"status\": \"PENDING\",\n   \"amount\": 99.99,\n   \"currency\": \"GBP\",\n   \"countryCode\": \"GB\",\n   \"language\": \"en\",\n   \"email\": \"client@example.com\",\n   \"orderDetails\": {\n    \"items\": [\n     {\n      \"name\": \"Flights Outbound\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 50\n     },\n     {\n      \"name\": \"Flights Return\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 50\n     },\n     {\n      \"name\": \"Flights Return\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 30\n     },\n     {\n      \"name\": \"Discounts\",\n      \"description\": null,\n      \"quantity\": 0,\n      \"amount\": -5\n     },\n     {\n      \"name\": \"Total\",\n      \"description\": null,\n      \"quantity\": 0,\n      \"amount\": 125\n     }\n    ]\n   },\n   \"integrationType\": \"CHECKOUT\",\n   \"merchantPostAuthUrl\": null,\n   \"bankId\": null,\n   \"aspspAuthUrl\": null,\n   \"cutOffDateTime\": null,\n   \"expectedExecutionDateTime\": null,\n   \"expectedSettlementDateTime\": null,\n   \"merchantId\": \"gabxwwv2l5\",\n   \"creationDateTime\": \"2020-05-01T12:19:17.069Z\",\n   \"debtorBankName\": null,\n   \"multiAuthorisation\": null,\n   \"links\": [\n    {\n     \"id\": \"7zmnaqgby5\",\n     \"resourceType\": \"refunds\",\n     \"uri\": \"/payments/7zmnaqgby5/refunds\"\n    },\n    {\n     \"id\": \"7zmnaqgby5\",\n     \"resourceType\": \"history\",\n     \"uri\": \"/payments/7zmnaqgby5/history\"\n    }\n   ]\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "05d460a9-21df-4627-a57e-cb6edec27039",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6214b417-e4da-4cb9-8b5c-a2f5606c5e23",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Partner Self Hosted Flow",
			"item": [
				{
					"name": "banks",
					"item": [
						{
							"name": "Retrieve Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6ad4345-87d7-49d5-ba30-7ba5b8ed3a9e",
										"exec": [
											"pm.environment.set(\"bankId\", JSON.parse(responseBody).data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/banks?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										},
										{
											"key": "supportedcurrencies",
											"value": "<string>,<string>",
											"disabled": true
										}
									]
								},
								"description": "Get Supported Banks On This TPP"
							},
							"response": [
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0001\",\n  \"description\": \"Page  is invalid\",\n  \"field\": \"page\"\n }\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/banks\",\n \"data\": [\n  {\n   \"uri\": \"/banks/8ow24y2pdx\",\n   \"name\": \"Nuapay\",\n   \"logo\": \"https://www.nuapay.com/wp-content/uploads/2018/04/nuapay.svg\",\n   \"supportedCurrencies\": [\n    \"GBP\",\n    \"EUR\"\n   ],\n   \"country\": \"GB\"\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "View Bank",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/banks/:bankId",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"banks",
										":bankId"
									],
									"variable": [
										{
											"key": "bankId",
											"value": "{{bankId}}",
											"description": "(Required) Bank id returned by Get Supported Banks endpoint."
										}
									]
								},
								"description": "View Bank Details"
							},
							"response": [
								{
									"name": "Not implemented",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks/:bankId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks",
												":bankId"
											],
											"variable": [
												{
													"key": "bankId"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e1a7470f-7a5c-4c51-9ede-566475229863",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "387dacd3-5060-446d-b3d6-118a19205fc8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "{payment Id}",
							"item": [
								{
									"name": "refunds",
									"item": [
										{
											"name": "Refund Payment",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "07e8bf13-f41f-4612-9861-e5951f85265d",
														"exec": [
															"function randomString(length) {\r",
															"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
															"}\r",
															"pm.environment.set(\"idempotencyKeyRefund\", randomString(12));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c080899a-fe5e-4808-87d9-80c264789398",
														"exec": [
															"pm.environment.set(\"refundId\", JSON.parse(responseBody).data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Idempotency-Key",
														"value": "{{idempotencyKeyRefund}}",
														"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"refundAmount\": 99.10,\n    \"currency\": \"{{currency}}\",\n    \"compensationAmount\": null,\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\n    \"remittanceInformation\": {\n        \"reference\": null,\n        \"unstructured\": null\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrlTpp}}/payments/:paymentId/refunds",
													"host": [
														"{{baseUrlTpp}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds"
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment which you want to refund"
														}
													]
												},
												"description": "Refund a payment using POST"
											},
											"response": [
												{
													"name": "Unprocessable Entity",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n \"data\": {\n  \"id\": \"azo4kal13b\",\n  \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n  \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"status\": \"REFUND_PENDING\",\n  \"refundAmount\": 100.01,\n  \"compensationAmount\": 10.01,\n  \"currency\": \"GBP\",\n  \"remittanceInformation\": {\n   \"reference\": \"reference\",\n   \"unstructured\": \"unstructuredRemittanceInfo\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"errorDetails\": null\n }\n}"
												},
												{
													"name": "Unsupported Media Type",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										},
										{
											"name": "List Payment Refunds",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrlTpp}}/payments/:paymentId/refunds?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrlTpp}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds"
													],
													"query": [
														{
															"key": "refundstatus",
															"value": "<string>,<string>",
															"description": "A number of statuses can be queried within a single request by providing multiple occurences of the parameter. If not provided all statuses will be returned",
															"disabled": true
														},
														{
															"key": "pagenumber",
															"value": "1",
															"description": "Page number"
														},
														{
															"key": "pagesize",
															"value": "20",
															"description": "Page size"
														}
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment for which you want to list refunds"
														}
													]
												},
												"description": "List refunds using GET"
											},
											"response": [
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Ok",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/\",\n \"data\": [\n  {\n   \"id\": \"azo4kal13b\",\n   \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n   \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n   \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n   \"status\": \"REFUND_PENDING\",\n   \"refundAmount\": 100.01,\n   \"compensationAmount\": 10.01,\n   \"currency\": \"GBP\",\n   \"remittanceInformation\": {\n    \"reference\": \"reference\",\n    \"unstructured\": \"unstructuredRemittanceInfo\"\n   },\n   \"endToEndIdentification\": \"endToEndIdentification\",\n   \"errorDetails\": null\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										},
										{
											"name": "Retrieve Refund",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds",
														":refundId"
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment for which you want to retrieve details"
														},
														{
															"key": "refundId",
															"value": "{{refundId}}",
															"description": "(Required) The ID of the refund for which you want to retrieve details"
														}
													]
												},
												"description": "GET Refund details endpoint"
											},
											"response": [
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n \"data\": {\n  \"id\": \"azo4kal13b\",\n  \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n  \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"status\": \"REFUND_REJECTED\",\n  \"refundAmount\": 100.01,\n  \"compensationAmount\": 10.01,\n  \"currency\": \"GBP\",\n  \"remittanceInformation\": {\n   \"reference\": \"reference\",\n   \"unstructured\": \"unstructuredRemittanceInfo\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"errorDetails\": [\n   \"5008\",\n   \"5016\"\n  ]\n }\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Retrieve Payment",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{merchantApiKey}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrlTpp}}/payments/:paymentId",
											"host": [
												"{{baseUrlTpp}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId",
													"value": "{{paymentId}}",
													"description": "(Required) The ID of the payment for which you want to retrieve details"
												}
											]
										},
										"description": "GET Payment details endpoint"
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"/payments/7zmnaqgby5\",\n \"data\": {\n  \"id\": \"7zmnaqgby5\",\n  \"uri\": \"/payments/7zmnaqgby5\",\n  \"endToEndIdentification\": \"endToEndIdentification1234\",\n  \"debtorAccount\": null,\n  \"risk\": {\n   \"paymentContextCode\": null,\n   \"merchantCategoryCode\": null,\n   \"merchantCustomerIdentification\": null,\n   \"deliveryAddress\": null\n  },\n  \"remittanceInformation\": {\n   \"reference\": \"reference1234\",\n   \"unstructured\": null\n  },\n  \"status\": \"PENDING\",\n  \"amount\": 99.99,\n  \"currency\": \"GBP\",\n  \"countryCode\": \"GB\",\n  \"language\": \"en\",\n  \"email\": \"client@example.com\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 50\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 50\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 30\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": -5\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": 125\n    }\n   ]\n  },\n  \"integrationType\": \"CHECKOUT\",\n  \"merchantPostAuthUrl\": null,\n  \"bankId\": null,\n  \"aspspAuthUrl\": null,\n  \"cutOffDateTime\": null,\n  \"expectedExecutionDateTime\": null,\n  \"expectedSettlementDateTime\": null,\n  \"merchantId\": \"gabxwwv2l5\",\n  \"creationDateTime\": \"2020-05-01T12:19:17.069Z\",\n  \"debtorBankName\": null,\n  \"multiAuthorisation\": null,\n  \"links\": [\n   {\n    \"id\": \"7zmnaqgby5\",\n    \"resourceType\": \"refunds\",\n    \"uri\": \"/payments/7zmnaqgby5/refunds\"\n   },\n   {\n    \"id\": \"7zmnaqgby5\",\n    \"resourceType\": \"history\",\n    \"uri\": \"/payments/7zmnaqgby5/history\"\n   }\n  ]\n }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Retry-After",
													"value": "<integer>",
													"description": "Number in seconds to wait"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										}
									]
								},
								{
									"name": "Retrieve Payment  History",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{merchantApiKey}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrlTpp}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrlTpp}}"
											],
											"path": [
												"payments",
												":paymentId",
												"history"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1",
													"description": "Page number"
												},
												{
													"key": "pagesize",
													"value": "20",
													"description": "Page size"
												}
											],
											"variable": [
												{
													"key": "paymentId",
													"value": "{{paymentId}}",
													"description": "(Required) The ID of the payment who's history you with to return"
												}
											]
										},
										"description": "Retrieve Payment History"
									},
									"response": [
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Retry-After",
													"value": "<integer>",
													"description": "Number in seconds to wait"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"/payments/ybo8zayk2q/history\",\n \"data\": [\n  {\n   \"status\": \"PENDING\",\n   \"createDateTime\": \"2019-02-28T10:43:07+00:00\"\n  },\n  {\n   \"status\": \"PENDING_APPROVAL\",\n   \"createDateTime\": \"2019-02-28T10:44:07+01:00\"\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": null\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0001\",\n  \"description\": \"Page Number is invalid\",\n  \"field\": \"page\"\n }\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e0a35c10-40b0-4d07-bd73-35b1fd3dc658",
										"exec": [
											"function randomString(length) {\r",
											"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
											"}\r",
											"pm.environment.set(\"endToEndIdentification\", randomString(31));\r",
											"pm.environment.set(\"reference\", randomString(18));\r",
											"pm.environment.set(\"idempotencyKeyPayments\", randomString(12));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3d492f2e-5328-4c5b-89b3-021b37113355",
										"exec": [
											"pm.environment.set(\"paymentId\", JSON.parse(responseBody).data.id);\r",
											"pm.environment.set(\"currency\", JSON.parse(responseBody).data.currency);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Idempotency-Key",
										"value": "{{idempotencyKeyPayments}}",
										"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": 99.10,\r\n    \"countryCode\": \"GB\",\r\n    \"currency\": \"GBP\",\r\n    \"language\": \"en\",\r\n    \"email\": \"johndoe@test.com\",\r\n    \"orderDetails\": {\r\n        \"items\": [\r\n            {\r\n                \"name\": \"Blue Jeans\",\r\n                \"description\": \"Wrangler Blue Jeans\",\r\n                \"quantity\": 1,\r\n                \"amount\": 89.10\r\n            },\r\n            {\r\n                \"name\": \"Hat\",\r\n                \"description\": \"Cowboy Hat\",\r\n                \"quantity\": 1,\r\n                \"amount\": 10\r\n            }\r\n        ]\r\n    },\r\n    \"integrationType\": \"SELF_HOSTED\",\r\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\r\n    \"bankId\": \"{{bankId}}\",\r\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\r\n    \"remittanceInformation\": {\r\n        \"reference\": null,\r\n        \"unstructured\": \"Wrangler Combo\"\r\n    },\r\n    \"risk\": {\r\n        \"paymentContextCode\": \"BillPayment\",\r\n        \"merchantCategoryCode\": null,\r\n        \"merchantCustomerIdentification\": null\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{baseUrlTpp}}/payments",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "Create a payment request POST endpoint"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/re27gry2dw\",\n \"data\": {\n  \"id\": \"re27gry2dw\",\n  \"uri\": \"/payments/re27gry2dw\",\n  \"endToEndIdentification\": \"endToEndIdentification123\",\n  \"debtorAccount\": {\n   \"identification\": 60161331926819,\n   \"name\": null,\n   \"schemeName\": \"SortCodeAccountNumber\",\n   \"secondaryIdentification\": null\n  }\n },\n \"risk\": {\n  \"paymentContextCode\": \"Other\",\n  \"merchantCategoryCode\": null,\n  \"merchantCustomerIdentification\": null,\n  \"deliveryAddress\": null\n },\n \"remittanceInformation\": {\n  \"reference\": \"reference123\",\n  \"unstructured\": null\n },\n \"status\": \"PENDING_APPROVAL\",\n \"amount\": 99.99,\n \"currency\": \"GBP\",\n \"countryCode\": \"GB\",\n \"language\": \"en\",\n \"email\": \"client@example.com\",\n \"orderDetails\": {\n  \"items\": [\n   {\n    \"name\": \"Flights Outbound\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 50\n   },\n   {\n    \"name\": \"Flights Return\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 50\n   },\n   {\n    \"name\": \"Flights Return\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 30\n   },\n   {\n    \"name\": \"Discounts\",\n    \"description\": null,\n    \"quantity\": null,\n    \"amount\": -5\n   },\n   {\n    \"name\": \"Total\",\n    \"description\": null,\n    \"quantity\": null,\n    \"amount\": 125\n   }\n  ]\n },\n \"integrationType\": \"SELF_HOSTED\",\n \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n \"bankId\": \"lyboxy9bqp\",\n \"aspspAuthUrl\": \"https://any-aspsp.com/openbanking/authorize?response_type=code+id_token&scope=openid+payments&client_id=377aaa6a-70bf-4e95-ac19-2bac5270bacd&redirect_uri=https%3A%2F%2Fapi.nuapay.com%2Ftpp%2Fpayment-requests%2Foauth&state=df78b5f6-12c0-4646-b47c-4362217acb0a&nonce=bea92693-19da-4609-858e-86c79e908a08&request=eyJraWQiOiI2QlJZamgtc0VRUTNmNWlzc0lxWU9WNGNXdVUiLCJ0eXAiOiJKV1QiLCJhbGciOiJQUzI1NiJ9.eyJpc3MiOiIzNzdhYWE2YS03MGJmLTRlOTUtYWMxOS0yYmFjNTI3MGJhY2QiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsIm5vbmNlIjoiYmVhOTI2OTMtMTlkYS00NjA5LTg1OGUtODZjNzllOTA4YTA4IiwiY2xpZW50X2lkIjoiMzc3YWFhNmEtNzBiZi00ZTk1LWFjMTktMmJhYzUyNzBiYWNkIiwibWF4X2FnZSI6ODY0MDAsImF1ZCI6Imh0dHBzOlwvXC9hdXRob3Jpc2UtYXBpLmxsb3lkc2JhbmsuY28udWtcL3Byb2QwMVwvY2hhbm5lbFwvbHlkcyIsInNjb3BlIjoib3BlbmlkIHBheW1lbnRzIiwiY2xhaW1zIjp7InVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6IjY0YWQ5NWEwLWUzMWYtNGNiOC04NjM3LTdjOGRmOTc3MTJmOSIsImVzc2VudGlhbCI6dHJ1ZX19LCJpZF90b2tlbiI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiI2NGFkOTVhMC1lMzFmLTRjYjgtODYzNy03YzhkZjk3NzEyZjkiLCJlc3NlbnRpYWwiOnRydWV9LCJhY3IiOnsiZXNzZW50aWFsIjp0cnVlLCJ2YWx1ZXMiOlsidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwidXJuOm9wZW5iYW5raW5nOnBzZDI6Y2EiXX19fSwicmVkaXJlY3RfdXJpIjoiaHR0cHM6XC9cL2FwaS5udWFwYXkuY29tXC90cHBcL3BheW1lbnQtcmVxdWVzdHNcL29hdXRoIiwic3RhdGUiOiJkZjc4YjVmNi0xMmMwLTQ2NDYtYjQ3Yy00MzYyMjE3YWNiMGEiLCJleHAiOjE1NzU0NTg3MTYsImlhdCI6MTU3NTQ1ODQxNiwianRpIjoiNDQyYmY4N2YtYzIxNC00NjgxLTk3ODYtZjIwZGM1YjIzOWYxIn0.IyeHKQQeU6x32CdUllkskLFWEjkJZKzvp8D4ZOwtlN3v32qmbh4hkGtwNilqZetqqq1ESB1InzfyAlb5S3GyZ_1pTV5UmFqsY60w4jIvSVQXmxKyCYIDrdgTvfa3IYOtA3vStpRpnHyXZfke7mBLGM0nn3YLEmujQ88T1kzq8v9rKTUKwgAE-NYLsYnXNg8dNlrl_lvXVou-J26keS5EaYMVSwHRXcZ8Vp51Hro5L3Py5KyG270RL-7AfJCrEOcvwKbHWOYthoZj1FcuuJWoCT80H1rtkw80vI8QpaQHhp8xYOGft4n6uf2WBhUVb9eBrl9B0GtWe3opBeFXzOtKyg\",\n \"cutOffDateTime\": null,\n \"expectedExecutionDateTime\": null,\n \"expectedSettlementDateTime\": null,\n \"merchantId\": \"gabxwwv2l5\",\n \"creationDateTime\": \"2020-05-01T08:25:29.291Z\",\n \"debtorBankName\": \"Bank Name\",\n \"multiAuthorisation\": {\n  \"status\": null,\n  \"numberRequired\": null,\n  \"numberReceived\": null,\n  \"lastUpdateDateTime\": null,\n  \"expirationDateTime\": null\n },\n \"links\": [\n  {\n   \"id\": \"re27gry2dw\",\n   \"resourceType\": \"refunds\",\n   \"uri\": \"/payments/re27gry2dw/refunds\"\n  },\n  {\n   \"id\": \"re27gry2dw\",\n   \"resourceType\": \"history\",\n   \"uri\": \"/payments/re27gry2dw/history\"\n  }\n ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
								}
							]
						},
						{
							"name": "List payments",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/payments?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "fromdatetime",
											"value": "<string>",
											"description": "Submission from date time in the format, 'yyyy-MM-dd'T'HH:mm:ss', maximum date from/to date range is 30 days. If neither from/to date is provided returns results for the last 30 days.",
											"disabled": true
										},
										{
											"key": "todatetime",
											"value": "<string>",
											"description": "Submission to date time in the format, 'yyyy-MM-dd'T'HH:mm:ss', maximum date from/to date range is 30 days. If neither from/to date is provided returns results for the last 30 days.",
											"disabled": true
										},
										{
											"key": "paymentstatus",
											"value": "<string>,<string>",
											"description": "A number of statuses can be queried within a single request by providing multiple occurences of the parameter. If not provided all statuses will be returned",
											"disabled": true
										},
										{
											"key": "payername",
											"value": "<string>",
											"description": "Payer name. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "payeremail",
											"value": "<string>",
											"description": "Payer e-mail. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "reference",
											"value": "<string>",
											"description": "Payment reference will attempt to match endToEndIdentification, remittanceInformation.reference and remittanceInformation.unstructured. Will return all matches and partial matches if using wildcard searches. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "<string>",
											"description": "Currency",
											"disabled": true
										},
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										}
									]
								},
								"description": "GET payments list endpoint"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments\",\n \"data\": [\n  {\n   \"id\": \"7zmnaqgby5\",\n   \"uri\": \"/payments/7zmnaqgby5\",\n   \"endToEndIdentification\": \"endToEndIdentification1234\",\n   \"debtorAccount\": null,\n   \"risk\": {\n    \"paymentContextCode\": null,\n    \"merchantCategoryCode\": null,\n    \"merchantCustomerIdentification\": null,\n    \"deliveryAddress\": null\n   },\n   \"remittanceInformation\": {\n    \"reference\": \"reference1234\",\n    \"unstructured\": null\n   },\n   \"status\": \"PENDING\",\n   \"amount\": 99.99,\n   \"currency\": \"GBP\",\n   \"countryCode\": \"GB\",\n   \"language\": \"en\",\n   \"email\": \"client@example.com\",\n   \"orderDetails\": {\n    \"items\": [\n     {\n      \"name\": \"Flights Outbound\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 50\n     },\n     {\n      \"name\": \"Flights Return\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 50\n     },\n     {\n      \"name\": \"Flights Return\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 30\n     },\n     {\n      \"name\": \"Discounts\",\n      \"description\": null,\n      \"quantity\": 0,\n      \"amount\": -5\n     },\n     {\n      \"name\": \"Total\",\n      \"description\": null,\n      \"quantity\": 0,\n      \"amount\": 125\n     }\n    ]\n   },\n   \"integrationType\": \"CHECKOUT\",\n   \"merchantPostAuthUrl\": null,\n   \"bankId\": null,\n   \"aspspAuthUrl\": null,\n   \"cutOffDateTime\": null,\n   \"expectedExecutionDateTime\": null,\n   \"expectedSettlementDateTime\": null,\n   \"merchantId\": \"gabxwwv2l5\",\n   \"creationDateTime\": \"2020-05-01T12:19:17.069Z\",\n   \"debtorBankName\": null,\n   \"multiAuthorisation\": null,\n   \"links\": [\n    {\n     \"id\": \"7zmnaqgby5\",\n     \"resourceType\": \"refunds\",\n     \"uri\": \"/payments/7zmnaqgby5/refunds\"\n    },\n    {\n     \"id\": \"7zmnaqgby5\",\n     \"resourceType\": \"history\",\n     \"uri\": \"/payments/7zmnaqgby5/history\"\n    }\n   ]\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Partner Self Hosted Callback Flow",
			"item": [
				{
					"name": "banks",
					"item": [
						{
							"name": "Retrieve Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "829d5288-29ae-42ee-8329-a130c6d57a22",
										"exec": [
											"pm.environment.set(\"bankId\", JSON.parse(responseBody).data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/banks?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										},
										{
											"key": "supportedcurrencies",
											"value": "<string>,<string>",
											"disabled": true
										}
									]
								},
								"description": "Get Supported Banks On This TPP"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/banks\",\n \"data\": [\n  {\n   \"uri\": \"/banks/8ow24y2pdx\",\n   \"name\": \"Nuapay\",\n   \"logo\": \"https://www.nuapay.com/wp-content/uploads/2018/04/nuapay.svg\",\n   \"supportedCurrencies\": [\n    \"GBP\",\n    \"EUR\"\n   ],\n   \"country\": \"GB\"\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0001\",\n  \"description\": \"Page  is invalid\",\n  \"field\": \"page\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks?pagenumber=1&pagesize=20&supportedcurrencies=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												},
												{
													"key": "supportedcurrencies",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						},
						{
							"name": "View Bank",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/banks/:bankId",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"banks",
										":bankId"
									],
									"variable": [
										{
											"key": "bankId",
											"value": "{{bankId}}",
											"description": "(Required) Bank id returned by Get Supported Banks endpoint."
										}
									]
								},
								"description": "View Bank Details"
							},
							"response": [
								{
									"name": "Not implemented",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/banks/:bankId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"banks",
												":bankId"
											],
											"variable": [
												{
													"key": "bankId"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "71566e8d-e2dd-48f8-80c2-49ac5e025c37",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "13e62238-a851-46c3-8f17-b2353603cc39",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "{payment Id}",
							"item": [
								{
									"name": "refunds",
									"item": [
										{
											"name": "Refund Payment",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "8217256e-029b-44f8-b898-fb7068e6da91",
														"exec": [
															"function randomString(length) {\r",
															"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
															"}\r",
															"pm.environment.set(\"idempotencyKeyRefund\", randomString(12));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "270c9da0-7058-41c4-a3dc-d822978261bd",
														"exec": [
															"pm.environment.set(\"refundId\", JSON.parse(responseBody).data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Idempotency-Key",
														"value": "{{idempotencyKeyRefund}}",
														"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"refundAmount\": 99.10,\n    \"currency\": \"{{currency}}\",\n    \"compensationAmount\": null,\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\n    \"remittanceInformation\": {\n        \"reference\": null,\n        \"unstructured\": null\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrlTpp}}/payments/:paymentId/refunds",
													"host": [
														"{{baseUrlTpp}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds"
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment which you want to refund"
														}
													]
												},
												"description": "Refund a payment using POST"
											},
											"response": [
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unprocessable Entity",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n \"data\": {\n  \"id\": \"azo4kal13b\",\n  \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n  \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"status\": \"REFUND_PENDING\",\n  \"refundAmount\": 100.01,\n  \"compensationAmount\": 10.01,\n  \"currency\": \"GBP\",\n  \"remittanceInformation\": {\n   \"reference\": \"reference\",\n   \"unstructured\": \"unstructuredRemittanceInfo\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"errorDetails\": null\n }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
												},
												{
													"name": "Unsupported Media Type",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unsupported Media Type",
													"code": 415,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Idempotency-Key",
																"value": "<string>",
																"description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours."
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"refundAmount\": \"<number>\",\n    \"currency\": \"<string>\",\n    \"compensationAmount\": \"<number>\",\n    \"endToEndIdentification\": \"<string>\",\n    \"remittanceInformation\": {\n        \"reference\": \"<string>\",\n        \"unstructured\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										},
										{
											"name": "List Payment Refunds",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrlTpp}}/payments/:paymentId/refunds?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrlTpp}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds"
													],
													"query": [
														{
															"key": "refundstatus",
															"value": "<string>,<string>",
															"description": "A number of statuses can be queried within a single request by providing multiple occurences of the parameter. If not provided all statuses will be returned",
															"disabled": true
														},
														{
															"key": "pagenumber",
															"value": "1",
															"description": "Page number"
														},
														{
															"key": "pagesize",
															"value": "20",
															"description": "Page size"
														}
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment for which you want to list refunds"
														}
													]
												},
												"description": "List refunds using GET"
											},
											"response": [
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Ok",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/\",\n \"data\": [\n  {\n   \"id\": \"azo4kal13b\",\n   \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n   \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n   \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n   \"status\": \"REFUND_PENDING\",\n   \"refundAmount\": 100.01,\n   \"compensationAmount\": 10.01,\n   \"currency\": \"GBP\",\n   \"remittanceInformation\": {\n    \"reference\": \"reference\",\n    \"unstructured\": \"unstructuredRemittanceInfo\"\n   },\n   \"endToEndIdentification\": \"endToEndIdentification\",\n   \"errorDetails\": null\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds?refundstatus=<string>,<string>&pagenumber=1&pagesize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds"
															],
															"query": [
																{
																	"key": "refundstatus",
																	"value": "<string>,<string>"
																},
																{
																	"key": "pagenumber",
																	"value": "1"
																},
																{
																	"key": "pagesize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "paymentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												}
											]
										},
										{
											"name": "Retrieve Refund",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{merchantApiKey}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"refunds",
														":refundId"
													],
													"variable": [
														{
															"key": "paymentId",
															"value": "{{paymentId}}",
															"description": "(Required) The ID of the payment for which you want to retrieve details"
														},
														{
															"key": "refundId",
															"value": "{{refundId}}",
															"description": "(Required) The ID of the refund for which you want to retrieve details"
														}
													]
												},
												"description": "GET Refund details endpoint"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Retry-After",
															"value": "<integer>",
															"description": "Number in seconds to wait"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Method Not Allowed",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/payments/:paymentId/refunds/:refundId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"payments",
																":paymentId",
																"refunds",
																":refundId"
															],
															"variable": [
																{
																	"key": "paymentId"
																},
																{
																	"key": "refundId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n \"data\": {\n  \"id\": \"azo4kal13b\",\n  \"uri\": \"/payments/ybo8zayk2q/refunds/azo4kal13b\",\n  \"creationDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"lastUpdateDateTime\": \"2019-02-28T10:43:07.00Z\",\n  \"status\": \"REFUND_REJECTED\",\n  \"refundAmount\": 100.01,\n  \"compensationAmount\": 10.01,\n  \"currency\": \"GBP\",\n  \"remittanceInformation\": {\n   \"reference\": \"reference\",\n   \"unstructured\": \"unstructuredRemittanceInfo\"\n  },\n  \"endToEndIdentification\": \"endToEndIdentification\",\n  \"errorDetails\": [\n   \"5008\",\n   \"5016\"\n  ]\n }\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Retrieve Payment",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{merchantApiKey}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrlTpp}}/payments/:paymentId",
											"host": [
												"{{baseUrlTpp}}"
											],
											"path": [
												"payments",
												":paymentId"
											],
											"variable": [
												{
													"key": "paymentId",
													"value": "{{paymentId}}",
													"description": "(Required) The ID of the payment for which you want to retrieve details"
												}
											]
										},
										"description": "GET Payment details endpoint"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"/payments/7zmnaqgby5\",\n \"data\": {\n  \"id\": \"7zmnaqgby5\",\n  \"uri\": \"/payments/7zmnaqgby5\",\n  \"endToEndIdentification\": \"endToEndIdentification1234\",\n  \"debtorAccount\": null,\n  \"risk\": {\n   \"paymentContextCode\": null,\n   \"merchantCategoryCode\": null,\n   \"merchantCustomerIdentification\": null,\n   \"deliveryAddress\": null\n  },\n  \"remittanceInformation\": {\n   \"reference\": \"reference1234\",\n   \"unstructured\": null\n  },\n  \"status\": \"PENDING\",\n  \"amount\": 99.99,\n  \"currency\": \"GBP\",\n  \"countryCode\": \"GB\",\n  \"language\": \"en\",\n  \"email\": \"client@example.com\",\n  \"orderDetails\": {\n   \"items\": [\n    {\n     \"name\": \"Flights Outbound\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 50\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 50\n    },\n    {\n     \"name\": \"Flights Return\",\n     \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n     \"quantity\": 2,\n     \"amount\": 30\n    },\n    {\n     \"name\": \"Discounts\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": -5\n    },\n    {\n     \"name\": \"Total\",\n     \"description\": null,\n     \"quantity\": null,\n     \"amount\": 125\n    }\n   ]\n  },\n  \"integrationType\": \"CHECKOUT\",\n  \"merchantPostAuthUrl\": null,\n  \"bankId\": null,\n  \"aspspAuthUrl\": null,\n  \"cutOffDateTime\": null,\n  \"expectedExecutionDateTime\": null,\n  \"expectedSettlementDateTime\": null,\n  \"merchantId\": \"gabxwwv2l5\",\n  \"creationDateTime\": \"2020-05-01T12:19:17.069Z\",\n  \"debtorBankName\": null,\n  \"multiAuthorisation\": null,\n  \"links\": [\n   {\n    \"id\": \"7zmnaqgby5\",\n    \"resourceType\": \"refunds\",\n    \"uri\": \"/payments/7zmnaqgby5/refunds\"\n   },\n   {\n    \"id\": \"7zmnaqgby5\",\n    \"resourceType\": \"history\",\n    \"uri\": \"/payments/7zmnaqgby5/history\"\n   }\n  ]\n }\n}"
										},
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId"
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Retry-After",
													"value": "<integer>",
													"description": "Number in seconds to wait"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										}
									]
								},
								{
									"name": "Retrieve Payment  History",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{merchantApiKey}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrlTpp}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrlTpp}}"
											],
											"path": [
												"payments",
												":paymentId",
												"history"
											],
											"query": [
												{
													"key": "pagenumber",
													"value": "1",
													"description": "Page number"
												},
												{
													"key": "pagesize",
													"value": "20",
													"description": "Page size"
												}
											],
											"variable": [
												{
													"key": "paymentId",
													"value": "{{paymentId}}",
													"description": "(Required) The ID of the payment who's history you with to return"
												}
											]
										},
										"description": "Retrieve Payment History"
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0001\",\n  \"description\": \"Page Number is invalid\",\n  \"field\": \"page\"\n }\n}"
										},
										{
											"name": "Method Not Allowed",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"uri\": \"/payments/ybo8zayk2q/history\",\n \"data\": [\n  {\n   \"status\": \"PENDING\",\n   \"createDateTime\": \"2019-02-28T10:43:07+00:00\"\n  },\n  {\n   \"status\": \"PENDING_APPROVAL\",\n   \"createDateTime\": \"2019-02-28T10:44:07+01:00\"\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": null\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/payments/:paymentId/history?pagenumber=1&pagesize=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"payments",
														":paymentId",
														"history"
													],
													"query": [
														{
															"key": "pagenumber",
															"value": "1"
														},
														{
															"key": "pagesize",
															"value": "20"
														}
													],
													"variable": [
														{
															"key": "paymentId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Retry-After",
													"value": "<integer>",
													"description": "Number in seconds to wait"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bde6805a-8f93-42ed-a3a7-372ff1926afb",
										"exec": [
											"function randomString(length) {\r",
											"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
											"}\r",
											"pm.environment.set(\"endToEndIdentification\", randomString(31));\r",
											"pm.environment.set(\"reference\", randomString(18));\r",
											"pm.environment.set(\"idempotencyKeyPayments\", randomString(12));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dc6b6c77-67b1-48dd-9223-39a4ee05cbb9",
										"exec": [
											"pm.environment.set(\"paymentId\", JSON.parse(responseBody).data.id);\r",
											"pm.environment.set(\"currency\", JSON.parse(responseBody).data.currency);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Idempotency-Key",
										"value": "{{idempotencyKeyPayments}}",
										"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": 99.10,\r\n    \"countryCode\": \"GB\",\r\n    \"currency\": \"GBP\",\r\n    \"language\": \"en\",\r\n    \"email\": \"johndoe@test.com\",\r\n    \"orderDetails\": {\r\n        \"items\": [\r\n            {\r\n                \"name\": \"Blue Jeans\",\r\n                \"description\": \"Wrangler Blue Jeans\",\r\n                \"quantity\": 1,\r\n                \"amount\": 89.10\r\n            },\r\n            {\r\n                \"name\": \"Hat\",\r\n                \"description\": \"Cowboy Hat\",\r\n                \"quantity\": 1,\r\n                \"amount\": 10\r\n            }\r\n        ]\r\n    },\r\n    \"integrationType\": \"SELF_HOSTED_CALLBACK\",\r\n    \"merchantPostAuthUrl\": \"https://tpp-uat.sentenialtest.com/tpp/payment-requests/oauth\",\r\n    \"bankId\": \"{{bankId}}\",\r\n    \"endToEndIdentification\": \"{{endToEndIdentification}}\",\r\n    \"remittanceInformation\": {\r\n        \"reference\": null,\r\n        \"unstructured\": \"Wrangler Combo\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{baseUrlTpp}}/payments",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments"
									]
								},
								"description": "Create a payment request POST endpoint"
							},
							"response": [
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments/re27gry2dw\",\n \"data\": {\n  \"id\": \"re27gry2dw\",\n  \"uri\": \"/payments/re27gry2dw\",\n  \"endToEndIdentification\": \"endToEndIdentification123\",\n  \"debtorAccount\": {\n   \"identification\": 60161331926819,\n   \"name\": null,\n   \"schemeName\": \"SortCodeAccountNumber\",\n   \"secondaryIdentification\": null\n  }\n },\n \"risk\": {\n  \"paymentContextCode\": \"Other\",\n  \"merchantCategoryCode\": null,\n  \"merchantCustomerIdentification\": null,\n  \"deliveryAddress\": null\n },\n \"remittanceInformation\": {\n  \"reference\": \"reference123\",\n  \"unstructured\": null\n },\n \"status\": \"PENDING_APPROVAL\",\n \"amount\": 99.99,\n \"currency\": \"GBP\",\n \"countryCode\": \"GB\",\n \"language\": \"en\",\n \"email\": \"client@example.com\",\n \"orderDetails\": {\n  \"items\": [\n   {\n    \"name\": \"Flights Outbound\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 50\n   },\n   {\n    \"name\": \"Flights Return\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 50\n   },\n   {\n    \"name\": \"Flights Return\",\n    \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n    \"quantity\": 2,\n    \"amount\": 30\n   },\n   {\n    \"name\": \"Discounts\",\n    \"description\": null,\n    \"quantity\": null,\n    \"amount\": -5\n   },\n   {\n    \"name\": \"Total\",\n    \"description\": null,\n    \"quantity\": null,\n    \"amount\": 125\n   }\n  ]\n },\n \"integrationType\": \"SELF_HOSTED\",\n \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n \"bankId\": \"lyboxy9bqp\",\n \"aspspAuthUrl\": \"https://any-aspsp.com/openbanking/authorize?response_type=code+id_token&scope=openid+payments&client_id=377aaa6a-70bf-4e95-ac19-2bac5270bacd&redirect_uri=https%3A%2F%2Fapi.nuapay.com%2Ftpp%2Fpayment-requests%2Foauth&state=df78b5f6-12c0-4646-b47c-4362217acb0a&nonce=bea92693-19da-4609-858e-86c79e908a08&request=eyJraWQiOiI2QlJZamgtc0VRUTNmNWlzc0lxWU9WNGNXdVUiLCJ0eXAiOiJKV1QiLCJhbGciOiJQUzI1NiJ9.eyJpc3MiOiIzNzdhYWE2YS03MGJmLTRlOTUtYWMxOS0yYmFjNTI3MGJhY2QiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsIm5vbmNlIjoiYmVhOTI2OTMtMTlkYS00NjA5LTg1OGUtODZjNzllOTA4YTA4IiwiY2xpZW50X2lkIjoiMzc3YWFhNmEtNzBiZi00ZTk1LWFjMTktMmJhYzUyNzBiYWNkIiwibWF4X2FnZSI6ODY0MDAsImF1ZCI6Imh0dHBzOlwvXC9hdXRob3Jpc2UtYXBpLmxsb3lkc2JhbmsuY28udWtcL3Byb2QwMVwvY2hhbm5lbFwvbHlkcyIsInNjb3BlIjoib3BlbmlkIHBheW1lbnRzIiwiY2xhaW1zIjp7InVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6IjY0YWQ5NWEwLWUzMWYtNGNiOC04NjM3LTdjOGRmOTc3MTJmOSIsImVzc2VudGlhbCI6dHJ1ZX19LCJpZF90b2tlbiI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiI2NGFkOTVhMC1lMzFmLTRjYjgtODYzNy03YzhkZjk3NzEyZjkiLCJlc3NlbnRpYWwiOnRydWV9LCJhY3IiOnsiZXNzZW50aWFsIjp0cnVlLCJ2YWx1ZXMiOlsidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwidXJuOm9wZW5iYW5raW5nOnBzZDI6Y2EiXX19fSwicmVkaXJlY3RfdXJpIjoiaHR0cHM6XC9cL2FwaS5udWFwYXkuY29tXC90cHBcL3BheW1lbnQtcmVxdWVzdHNcL29hdXRoIiwic3RhdGUiOiJkZjc4YjVmNi0xMmMwLTQ2NDYtYjQ3Yy00MzYyMjE3YWNiMGEiLCJleHAiOjE1NzU0NTg3MTYsImlhdCI6MTU3NTQ1ODQxNiwianRpIjoiNDQyYmY4N2YtYzIxNC00NjgxLTk3ODYtZjIwZGM1YjIzOWYxIn0.IyeHKQQeU6x32CdUllkskLFWEjkJZKzvp8D4ZOwtlN3v32qmbh4hkGtwNilqZetqqq1ESB1InzfyAlb5S3GyZ_1pTV5UmFqsY60w4jIvSVQXmxKyCYIDrdgTvfa3IYOtA3vStpRpnHyXZfke7mBLGM0nn3YLEmujQ88T1kzq8v9rKTUKwgAE-NYLsYnXNg8dNlrl_lvXVou-J26keS5EaYMVSwHRXcZ8Vp51Hro5L3Py5KyG270RL-7AfJCrEOcvwKbHWOYthoZj1FcuuJWoCT80H1rtkw80vI8QpaQHhp8xYOGft4n6uf2WBhUVb9eBrl9B0GtWe3opBeFXzOtKyg\",\n \"cutOffDateTime\": null,\n \"expectedExecutionDateTime\": null,\n \"expectedSettlementDateTime\": null,\n \"merchantId\": \"gabxwwv2l5\",\n \"creationDateTime\": \"2020-05-01T08:25:29.291Z\",\n \"debtorBankName\": \"Bank Name\",\n \"multiAuthorisation\": {\n  \"status\": null,\n  \"numberRequired\": null,\n  \"numberReceived\": null,\n  \"lastUpdateDateTime\": null,\n  \"expirationDateTime\": null\n },\n \"links\": [\n  {\n   \"id\": \"re27gry2dw\",\n   \"resourceType\": \"refunds\",\n   \"uri\": \"/payments/re27gry2dw/refunds\"\n  },\n  {\n   \"id\": \"re27gry2dw\",\n   \"resourceType\": \"history\",\n   \"uri\": \"/payments/re27gry2dw/history\"\n  }\n ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 99.99,\n    \"countryCode\": \"GB\",\n    \"currency\": \"GBP\",\n    \"email\": \"client@example.com\",\n    \"language\": \"en\",\n    \"endToEndIdentification\": \"endToEndIdentification123\",\n    \"remittanceInformation\": {\n        \"reference\": \"reference123\"\n    },\n    \"orderDetails\": {\n        \"items\": [\n            {\n                \"name\": \"Flights Outbound\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 50\n            },\n            {\n                \"name\": \"Flights Return\",\n                \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n                \"quantity\": 2,\n                \"amount\": 30\n            },\n            {\n                \"name\": \"Discounts\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": -5\n            },\n            {\n                \"name\": \"Total\",\n                \"description\": null,\n                \"quantity\": null,\n                \"amount\": 125\n            }\n        ]\n    },\n    \"integrationType\": \"SELF_HOSTED\",\n    \"merchantPostAuthUrl\": \"https://merchant.openbanking.com/result\",\n    \"bankId\": \"lyboxy9bqp\",\n    \"debtorAccount\": {\n        \"identification\": 60161331926819,\n        \"schemeName\": \"SortCodeAccountNumber\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0016\",\n  \"description\": \"Amount has to be greater than 0.\",\n  \"field\": \"amount\"\n }\n}"
								}
							]
						},
						{
							"name": "List payments",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlTpp}}/payments?pagenumber=1&pagesize=20",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments"
									],
									"query": [
										{
											"key": "fromdatetime",
											"value": "<string>",
											"description": "Submission from date time in the format, 'yyyy-MM-dd'T'HH:mm:ss', maximum date from/to date range is 30 days. If neither from/to date is provided returns results for the last 30 days.",
											"disabled": true
										},
										{
											"key": "todatetime",
											"value": "<string>",
											"description": "Submission to date time in the format, 'yyyy-MM-dd'T'HH:mm:ss', maximum date from/to date range is 30 days. If neither from/to date is provided returns results for the last 30 days.",
											"disabled": true
										},
										{
											"key": "paymentstatus",
											"value": "<string>,<string>",
											"description": "A number of statuses can be queried within a single request by providing multiple occurences of the parameter. If not provided all statuses will be returned",
											"disabled": true
										},
										{
											"key": "payername",
											"value": "<string>",
											"description": "Payer name. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "payeremail",
											"value": "<string>",
											"description": "Payer e-mail. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "reference",
											"value": "<string>",
											"description": "Payment reference will attempt to match endToEndIdentification, remittanceInformation.reference and remittanceInformation.unstructured. Will return all matches and partial matches if using wildcard searches. This parameter supports searching with wildcards",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "<string>",
											"description": "Currency",
											"disabled": true
										},
										{
											"key": "pagenumber",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "pagesize",
											"value": "20",
											"description": "Page size"
										}
									]
								},
								"description": "GET payments list endpoint"
							},
							"response": [
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/payments?fromdatetime=<string>&todatetime=<string>&paymentstatus=<string>,<string>&payername=<string>&payeremail=<string>&reference=<string>&currency=<string>&pagenumber=1&pagesize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments"
											],
											"query": [
												{
													"key": "fromdatetime",
													"value": "<string>"
												},
												{
													"key": "todatetime",
													"value": "<string>"
												},
												{
													"key": "paymentstatus",
													"value": "<string>,<string>"
												},
												{
													"key": "payername",
													"value": "<string>"
												},
												{
													"key": "payeremail",
													"value": "<string>"
												},
												{
													"key": "reference",
													"value": "<string>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "pagenumber",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/payments\",\n \"data\": [\n  {\n   \"id\": \"7zmnaqgby5\",\n   \"uri\": \"/payments/7zmnaqgby5\",\n   \"endToEndIdentification\": \"endToEndIdentification1234\",\n   \"debtorAccount\": null,\n   \"risk\": {\n    \"paymentContextCode\": null,\n    \"merchantCategoryCode\": null,\n    \"merchantCustomerIdentification\": null,\n    \"deliveryAddress\": null\n   },\n   \"remittanceInformation\": {\n    \"reference\": \"reference1234\",\n    \"unstructured\": null\n   },\n   \"status\": \"PENDING\",\n   \"amount\": 99.99,\n   \"currency\": \"GBP\",\n   \"countryCode\": \"GB\",\n   \"language\": \"en\",\n   \"email\": \"client@example.com\",\n   \"orderDetails\": {\n    \"items\": [\n     {\n      \"name\": \"Flights Outbound\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 50\n     },\n     {\n      \"name\": \"Flights Return\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 50\n     },\n     {\n      \"name\": \"Flights Return\",\n      \"description\": \"Dublin(DUB) to London(LCY) - Adult Fare\",\n      \"quantity\": 2,\n      \"amount\": 30\n     },\n     {\n      \"name\": \"Discounts\",\n      \"description\": null,\n      \"quantity\": 0,\n      \"amount\": -5\n     },\n     {\n      \"name\": \"Total\",\n      \"description\": null,\n      \"quantity\": 0,\n      \"amount\": 125\n     }\n    ]\n   },\n   \"integrationType\": \"CHECKOUT\",\n   \"merchantPostAuthUrl\": null,\n   \"bankId\": null,\n   \"aspspAuthUrl\": null,\n   \"cutOffDateTime\": null,\n   \"expectedExecutionDateTime\": null,\n   \"expectedSettlementDateTime\": null,\n   \"merchantId\": \"gabxwwv2l5\",\n   \"creationDateTime\": \"2020-05-01T12:19:17.069Z\",\n   \"debtorBankName\": null,\n   \"multiAuthorisation\": null,\n   \"links\": [\n    {\n     \"id\": \"7zmnaqgby5\",\n     \"resourceType\": \"refunds\",\n     \"uri\": \"/payments/7zmnaqgby5/refunds\"\n    },\n    {\n     \"id\": \"7zmnaqgby5\",\n     \"resourceType\": \"history\",\n     \"uri\": \"/payments/7zmnaqgby5/history\"\n    }\n   ]\n  }\n ],\n \"page\": {\n  \"pageNumber\": 1,\n  \"pageSize\": 10,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n },\n \"sort\": []\n}"
								}
							]
						},
						{
							"name": "Forward Payment Callback",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0a6d24a4-ab23-48a2-bd83-432b95d6f411",
										"exec": [
											"function randomString(length) {\r",
											"    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r",
											"}\r",
											"pm.environment.set(\"idempotencyKeyCallback\", randomString(12));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{callbackAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Idempotency-Key",
										"value": "{{idempotencyKeyCallback}}",
										"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"dHPGft2aLlzAmzv4cEYgml\",\n  \"state\": \"0692eece-bc21-4cb1-8ad1-d8e9ec2ca5de\",\n  \"id_token\": \"eyJraWQiOiJlMmVfc2lnbmluZ19rZXlfaWQiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ1cm46YWxwaGFiYW5rOmludGVudDozMGE1Njg2Ni1kNWJlLTRhMzctOWFhMS03YTMzZjE2YjljM2IiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiQTcxMW5ta2F0VjNWRTloM0J6MkxMZyIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoiMUx0cTY1SDc3MkZZc3VraTZHaHJ5ZyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6InVybjphbHBoYWJhbms6aW50ZW50OjMwYTU2ODY2LWQ1YmUtNGEzNy05YWExLTdhMzNmMTZiOWMzYiIsImtpZCI6ImUyZV9zaWduaW5nX2tleV9pZCIsImlzcyI6Imh0dHBzOlwvXC9hcGkuYWxwaGFuYmFuay5jb20iLCJleHAiOjE1ODk4ODIxOTIsImlhdCI6MTU4OTg4MTU5Miwibm9uY2UiOiIwYWZlYmNjMy1iMGFjLTQ4ZGUtOTYxNS1kNjc4OTE3Y2MxOTUiLCJqdGkiOiI0Yzk1YTE4Zi02MDYzLTRlMTMtYWEzNS1jNWI1NTJkYmI4ZjAifQ.Ce_qMwd-5HE2KJ4UFx7uVfKyadQMHUVIAXdAPTnBXXea2HT1AvLOg3et-Loi_PW2pjCEADAet0qjYGdqfSHd9E19jLE55uuTv1RVRbnthUp20suF1ZcNqXepSuDStpG6yx0AIBlHDlpFykottPVN8G3gaeJN1uORxcAX6WKrFArRyxfswCivQsEUt1jtzA0N8I9uBYSa0wmKhnQJX10EkpwpPb9eG-d9JkkFDDXHjBvHOGaZDH_4yIg5U2Hush_bUuWyB0jnYeFC-6tKrAd6sWaWSIHOKjSMvwKLQoaqWg9BFlwzPUCVNVBLrITKen5vgbcQscE5kv2fN0UMC1nBVg\"\n}"
								},
								"url": {
									"raw": "{{baseUrlTpp}}/payments/callback",
									"host": [
										"{{baseUrlTpp}}"
									],
									"path": [
										"payments",
										"callback"
									]
								},
								"description": "Forward Payment Callback POST endpoint"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Retry-After",
											"value": "<integer>",
											"description": "Number in seconds to wait"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"T0004\",\n  \"description\": \"Field is invalid\",\n  \"field\": \"email\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": \"T0000\",\n \"returnDescription\": \"Validation errors occurred. Please see details.\",\n \"details\": {\n  \"code\": \"XXXXX\",\n  \"description\": \"No payment matched based on provided parameters.\",\n  \"field\": null\n }\n}"
								},
								{
									"name": "ACCEPTED",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Location",
											"value": "<string>",
											"description": "Holds uri of payment that was mapped using provided callback parameters"
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Idempotency-Key",
												"value": "<string>",
												"description": "Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"KaIpmx\",\n    \"state\": \"3410742c-304d-4311-a54f-323f1f20f96f\",\n    \"id_token\": \"eyJraWQiOiJOdWFwYXlCYW5rX0tleUlEIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJjZDBlNDkxNC1jNjRlLTQyODQtYTg0ZS0yYzc2NGI3NzU5MWYiLCJhdWQiOiJ0ZXN0IiwiY19oYXNoIjoiU2VWM1ZYU3YyVHNMVXhLdVdLWE9PUSIsImFjciI6WyJ1cm46b3BlbmJhbmtpbmc6cHNkMjpzY2EiXSwic19oYXNoIjoicjNHcm53YjFzNXZYaHRwOU1oYm1zdyIsIm9wZW5iYW5raW5nX2ludGVudF9pZCI6ImNkMGU0OTE0LWM2NGUtNDI4NC1hODRlLTJjNzY0Yjc3NTkxZiIsImtpZCI6Ik51YXBheUJhbmtfS2V5SUQiLCJpc3MiOiJodHRwczpcL1wvYXBpLmFscGhhbmJhbmsuY29tIiwiZXhwIjoxNTUzMDA4MTkwLCJpYXQiOjE1NTMwMDc1OTAsIm5vbmNlIjoiODJiMTNjMzYtZTIzOC00MDA2LTkzMjQtNDJhZmQ2YjMwOTJlIiwianRpIjoiNGI4ODk3NjQtOWQwMy00YWM1LTg2MDgtOGMzZGU2NzU2N2VkIn0.fRBht6BQtqNxbUKmeoNqzWyFykTVX6zMCLcqvnPt1m665l9a8Zuwa4oaY_-2pULshjwD9yptgRdQ8KbkQ1SddwQacZYwUvzzbE1kV6GwhuwvGNU9TihPvh55eE3nY9kYJywn5m6hgC0x81m1MhMeAikanNZIia7rryB30CKxDMt0sL-5CvnFdyr2_csjuXotekC_weDsY4WNqCu5LfZhVk0IixXNiDXFxxnR9qNOjQ5fTljITWoPQ0G1KYfW3DOs4Nb23oZe8b-RxLebD9R2kBiIWh79oGOg-8RZz36FDNSn5Skt1KAz_c9bv7Vbt-au6VY1_tPdvZ8sgd44M__rZQ\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/payments/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payments",
												"callback"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"returnCode\": null,\n \"returnDescription\": null,\n \"details\": null\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "750e3c01-6086-43db-b6fc-2b53723ba9ea",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cb156f14-d3ad-4c62-b07e-7340dca73364",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "tokens",
					"item": [
						{
							"name": "Request Access Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c2edd35-673b-4186-9af9-79f0d0db81ec",
										"exec": [
											"pm.environment.set(\"callbackTokenId\", JSON.parse(responseBody).data.id);\r",
											"pm.environment.set(\"callbackAccessToken\", JSON.parse(responseBody).data.accessToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"openbanking_callback\"\n    ],\n    \"expiresIn\": 31556926\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								},
								"description": "The endpoint allows Organisation to exchange APIKey to AccessToken"
							},
							"response": [
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n \"data\": {\n  \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpcF9maWx0ZXJpbmciOmZhbHNlLCJhdWQiOlsiZ2siLCJ3ZWJob29rcyIsInBpIiwicm1zIiwiaW5zdGFudCJdLCJvcmlnaW5hdG9yX29yZ19pZCI6ImoyOXAza3BhYngiLCJ1c2VyX2lkIjoid3FqMjlubXhuZSIsInVzZXJfbmFtZSI6InN5c3RlbSIsIm9yZ19pZCI6IiIsInNjb3BlIjpbInVzZXJkaXJlY3QiXSwiZXhwIjoxNTQ0NTM5MzQ3LCJhdXRob3JpdGllcyI6WyJGTV9CdWxrX0NhbmNlbCIsIkJhbmtfVXBkYXRlIiwiSW5zdGFudF9QYXltZW50c19DcmVhdGVfUmVzZXJ2YXRpb24iLCJDcmVkaXRUcmFuc2Zlcl9SZWplY3QiLCJHTE9CQUxfU0VBUkNIIiwiU2NoZW1lX0FkZFVwZGF0ZSIsIkJhbmtHcm91cF9MaXN0Iiwid2ViaG9va19hZG1pbiIsIkN1c3RvbWVyX0VkaXQiLCJCYW5rX0FwcHJvdmFsX0VkaXRvciIsIkFkbWluX1VzZXJfQWN0aXZhdGUiLCJCYW5rX1ZpZXciLCJDcmVkaXRvckFjY291bnRfQWRkIiwiQ3JlZGl0b3JBY2NvdW50X0xpc3RWaWV3IiwiRk1fRUJBX1NlYXJjaCIsIkJhbmtfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0VkaXRTZXR0aW5ncyIsIkNyZWRpdG9yX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX1NlYXJjaCIsIkFQUFJPVkFMX1ZJRVdFUiIsIk51YXBheV9BcHBfTGlzdF9BY2NvdW50cyIsIkJlbmVmaWNpYXJ5X0FkZCIsIkNyZWRpdG9yX1NlY3VyaXR5X1ZpZXciLCJCaWNfUmVhY2hhYmlsaXR5X1ZhbGlkYXRpb24iLCJDcmVkaXRvcl9Db250YWN0X0FkZEVkaXQiLCJCYW5rX1VzZXJfQWN0aXZhdGUiLCJGTV9NYW5kYXRlX1NlYXJjaCIsIkZNX0REX1JfVHJhbnNhY3Rpb25fVmlldyIsIkNvbnRhY3RzX0xpc3RWaWV3QWRkRWRpdCIsIkRlYnRvck1hbmRhdGVfQmxvY2tBY3RpdmF0ZSIsIk51YXBheV9BcHBfTGlzdF9UcmFuc2FjdGlvbnMiLCJCYW5rX1VzZXJfRWRpdCIsIkZNX01hbmRhdGVfRmlsZV9VcGxvYWQiLCJPcmdVbml0X1ZpZXciLCJCYW5rR3JvdXBfV1NfVXNlcl9MaXN0Vmlld0FkZEVkaXQiLCJDcmVkaXRvck1hbmRhdGVfRERfU2VhcmNoIiwiQ2xpZW50X0xhbmdfVmlldyIsIkZNX0JhdGNoX1JldmVyc2UiLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWN0aXZhdGUiLCJPcmdVbml0X0xpc3QiLCJGTV9ERF9WaWV3IiwiQmFua0dyb3VwX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9Vc2VyX1ZpZXciLCJWYWxpZGF0ZV9BY2NvdW50IiwiQ2xhaW1fTGlzdFZpZXciLCJDbGllbnRfTGlzdCIsIkNyZWRpdG9yQWNjb3VudF9FZGl0IiwiQU1MX1NlcnZpY2UiLCJDcmVkaXRvcl9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVkaXRvck1hbmRhdGVfTm9FZGl0QWNjb3VudERldGFpbHMiLCJGTV9CdWxrX1Jldm9rZSIsIkNyZWRpdG9yTWFuZGF0ZV9FZGl0IiwiQ2xpZW50X0FwcHJvdmFsX0VkaXRvciIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfTGlzdFZpZXciLCJCZW5lZmljaWFyeUFjY291bnRfTGlzdFZpZXdBZGRFZGl0IiwiQ3JlZGl0b3JfQ29udGFjdF9MaXN0VmlldyIsIlJvb3RQYXltZW50U2NoZW1lX0xpc3RWaWV3QWRkRWRpdCIsIkFQUFJPVkFMX0VESVRPUiIsIk9yZ1VuaXRfQWRkVXBkYXRlIiwiQmFua0dyb3VwX0FwcHJvdmFsX0VkaXRvciIsIkZNX0JhdGNoX0NhbmNlbCIsIkZNX0REX0xpc3RCYXRjaGVzIiwiUm9sZV9Bc3NpZ25tZW50IiwiQ3JlZGl0VHJhbnNmZXJfQWRkIiwiQ2xpZW50X0FkZCIsIlNjaGVtZV9MaW1pdHNfVmlldyIsIkZNX0JhdGNoX1ZpZXciLCJGTV9UcmFuc2FjdGlvbl9SZXZva2UiLCJNYW5kYXRlQ29sbGVjdGlvbl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfRXhwb3J0IiwiQmFua19FeHBvcnRUaW1lc19WaWV3IiwiQ3JlZGl0b3JTY2hlbWVfQ29udGFjdF9SZW1vdmUiLCJGTV9QYWluMl9GaWxlX0V4cG9ydCIsIkNTTV9MaXN0IiwiQ1NNX1ZpZXciLCJBZ2VuY3lCYW5rX1ZpZXciLCJDbGllbnRfRWRpdExpbWl0cyIsIkZNX0J1bGtfUmV2ZXJzZSIsIkJhbmtfVXNlcl9BZGQiLCJDcmVkaXRvck1hbmRhdGVfQ2FuY2VsIiwiQWdlbmN5QmFua19MaXN0IiwiRk1fQmF0Y2hfUmV2b2tlIiwiU2VhcmNoX1Bvc3RpbmciLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9BZGQiLCJCYW5rR3JvdXBfQXBwcm92YWxfVmlld2VyIiwiQmFua0dyb3VwX1NlY3VyaXR5X0VkaXQiLCJSb2xlX0FkZEVkaXQiLCJPcmlnaW5hdG9yX0V4cG9ydFRpbWVzX0VkaXQiLCJEZWJ0b3JBY2NvdW50X0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfTGlzdCIsIkFkbWluX1VzZXJfQWRkIiwiUm9sZV9MaXN0VmlldyIsIkZNX0NUX1NlYXJjaCIsIkNyZWRpdG9yX1VzZXJfTGlzdCIsIkNyZWRpdFRyYW5zZmVyX0VkaXQiLCJBZG1pbl9Vc2VyX0VkaXQiLCJGTV9NYW5kYXRlX0ZpbGVfU2VhcmNoIiwiQmFua0dyb3VwX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX0NhbmNlbCIsIkNyZWRpdG9yX1VzZXJfQWN0aXZhdGUiLCJDcmVkaXRvcl9Vc2VyX1ZpZXciLCJDcmVkaXRUcmFuc2Zlcl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfUmV2b2tlIiwiQ2xpZW50X0VkaXQiLCJTY2hlbWVfTGlzdCIsIkRpcmVjdERlYml0X0xpc3RWaWV3IiwiU2NoZW1lX1ZpZXciLCJCYW5rX0FkZCIsIkFnZW5jeUJhbmtfQWRkVXBkYXRlIiwiQ2xpZW50X0FwcHJvdmFsX1ZpZXdlciIsIlZpZXdfT3JpZ2luYXRvcl9SZXBvcnRzIiwiRGVidG9yTWFuZGF0ZV9MaXN0VmlldyIsIkJhbmtHcm91cF9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVhdGVfUG9zdGluZyIsIk9yaWdpbmF0b3JfRXhwb3J0VGltZXNfVmlldyIsIkJhbmtfQXBwcm92YWxfQ29uZmlndXJhdGlvbiIsIkJlbmVmaWNpYXJ5X0xpc3RWaWV3IiwiQ3JlZGl0b3JNYW5kYXRlX0VkaXRBY2NvdW50RGV0YWlscyIsIkZNX0NUX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JfVU1SX0NvbmZpZ3VyYXRpb24iLCJDbGllbnRfTGFuZ19FZGl0IiwiQ3JlZGl0b3JfRmlsZV9VcGxvYWQiLCJDb2xsZWN0aW5nQWNjb3VudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1ZpZXdIaXN0b3J5IiwiQmFua19TY2hlbWVfVmlldyIsIlBheW1lbnRfSW5pdGlhdGlvbl9TZXJ2aWNlX1Byb3ZpZGVyIiwiQ3JlZGl0b3JNYW5kYXRlX0FjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1N1c3BlbmQiLCJDcmVkaXRvclNjaGVtZV9MaXN0VmlldyIsIkNyZWRpdG9yX1dTX1VzZXJfTGlzdFZpZXdBZGRFZGl0IiwiTnVhcGF5X0FwcF9WaWV3X0FjY291bnQiLCJQcm9jZXNzX0luc3RhbnRDcmVkaXRUcmFuc2Zlcl9XZWJob29rcyIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfUmVtb3ZlIiwiQ3JlZGl0b3JfU2VjdXJpdHlfRWRpdCIsIkNyZWRpdG9yTWFuZGF0ZV9SZXN1Ym1pdCIsIkJhbmtHcm91cF9VcGRhdGUiLCJDcmVkaXRvcl9Vc2VyX0FkZCIsIkNTTV9BZGRVcGRhdGUiLCJDcmVkaXRvclNjaGVtZV9BZGQiLCJIb2xkaW5nQWNjb3VudF9MaXN0VmlldyIsIkZpbmFuY2lhbEluc3RpdHV0aW9uX0xpc3RWaWV3QWRkRWRpdCIsIkNsYWltX0VkaXRDYW5jZWwiLCJEZWJ0b3JNYW5kYXRlX0FkZEVkaXQiLCJDbGllbnRfQmlsbGluZ0NoYXJnZXNfQ29uZmlndXJhdGlvbiIsIkNyZWRpdG9yU2NoZW1lX09wdGlvbnNfRWRpdCIsIkRpcmVjdERlYml0X0VkaXQiLCJGTV9ERF9GaWxlX0xlZ2FjeV9TZWFyY2giLCJGTV9ERF9GaWxlX1ZpZXciLCJDbGFpbV9BZGRFZGl0IiwiRk1fVHJhbnNhY3Rpb25fUmV2ZXJzZSIsIkZNX0REX1NlYXJjaCIsIkJhbmtfVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX0NvbnRyYWN0X0FkZEVkaXQiLCJGTV9DVF9GaWxlX0V4cG9ydCIsIkRlYnRvckFjY291bnRfQmxvY2tBY3RpdmF0ZSIsIkNsaWVudF9WaWV3IiwiQ3VzdG9tZXJfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0xpc3RBY2NvdW50IiwiQ3JlZGl0VHJhbnNmZXJfUmVjYWxsIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9MaXN0IiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRfRXhwb3J0IiwiQWRtaW5fVXNlcl9MaXN0IiwiQmFua19CaWxsaW5nQ2hhcmdlc19Db25maWd1cmF0aW9uIiwiQmFua0dyb3VwX1NjaGVtZUxpbWl0c19WaWV3IiwiRGlyZWN0RGViaXRfVW5wYWlkTGlzdFZpZXciLCJQdWJsaWMiLCJBZG1pbl9Vc2VyX1ZpZXciLCJGTV9CdWxrX1NlYXJjaCIsIkJlbmVmaWNpYXJ5X0xpc3RFZGl0IiwiRk1fRERfRmlsZV9Eb3dubG9hZCIsIkludm9rZV9TRFMiLCJDcmVkaXRvck1hbmRhdGVfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9DYW5jZWwiLCJDdXN0b21lcl9BZGQiLCJDb250YWN0c19FZGl0IiwiRk1fRERfRmlsZV9VcGxvYWQiLCJDcmVkaXRvclNjaGVtZV9BY2NvdW50X0FkZEVkaXQiLCJCYW5rX0V4cG9ydFRpbWVzX0VkaXQiLCJCYW5rR3JvdXBfU2VjdXJpdHlfVmlldyIsIkNsaWVudF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JTY2hlbWVfT3B0aW9uc19WaWV3IiwiQ3JlZGl0b3JMb2dvX0FkZCIsIkZNX0JhdGNoX1NlYXJjaCIsIkJhbmtfVXNlcl9WaWV3IiwiRGlyZWN0RGViaXRfUmV2b2tlIiwiQWRtaW5fVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1JlYWN0aXZhdGUiLCJGTV9ERF9GaWxlX1BhaW5fU2VhcmNoIiwiQmFua0dyb3VwX0FkZCIsIk51YXBheV9BcHBfQWNjb3VudCIsIkZNX1BhaW4yX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JNYW5kYXRlX0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfQWRkIiwiRGlyZWN0RGViaXRfQ2FuY2VsIiwiQ3JlZGl0b3JTY2hlbWVfVU1SX0NvbmZpZ3VyYXRpb24iLCJCYW5rX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JNYW5kYXRlX0ltYWdlVXBsb2FkIiwiQmFua0dyb3VwX1ZpZXciLCJCYW5rX0FwcHJvdmFsX1ZpZXdlciJdLCJqdGkiOiIzZmU0MGJlNC04MTM5LTRiY2MtYTZmYy05ZmM2ZGY5MjdiMzEiLCJjbGllbnRfaWQiOiJvcmlnaXhfZ2tfdXNlciJ9.lAR5VFVcLaWNTdk43pbsk3bs3jOqWdedOi9RsGDYsNNl94yvHOh09wgzp822V2SnF_Ca4O9f_-Agn1iACKO71Gq9u2kgfpZGE03xURZXlzfmkZXQrOw7JvSlBQ_QeSe5xhhquHvIvYk8bH8Zg114J-BobaiKKf66vAgj8jkevg_sJah0kLecxNpVey33zSLIfzo3xB-Gq9l_qkkU37TGmOrykUYGF9YLLwQ2wnHu7jPzdL5WmU6sFW3bzDsGVztWRzCrkltCPcW42LvHBnWDWK1lCOjPqSW8nRKlZfKgRfmvQxBG5DYxEt14tPqAvEofYWcDKgdS_xZa4ELytZsuQQ\",\n  \"tokenType\": \"BEARER\",\n  \"accessType\": \"CR\",\n  \"expityTime\": 1545062272000,\n  \"scopes\": [\n   \"openbanking_pisp\",\n   \"bankadmin\",\n   \"admin\"\n  ],\n  \"ipFiltering\": true,\n  \"requestedOrganisation\": \"ybo8zd8j2q\",\n  \"requestingOrganisation\": \"ybo8zd8j2q\",\n  \"status\": \"ACTIVE\",\n  \"createdTimestamp\": 1544975872000,\n  \"revokedTimestamp\": null,\n  \"links\": [\n   {\n    \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n    \"resourceType\": \"revoketoken\",\n    \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31/revoke\"\n   }\n  ]\n }\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Revoke all Access Tokens",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tokens/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										"revoke"
									]
								},
								"description": "The endpoint allows to Revoke to all Active AccessTokens for requesting Organisation"
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												"revoke"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												"revoke"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Method Not Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												"revoke"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												"revoke"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												"revoke"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												"revoke"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/tokens/revoke\",\n \"data\": {\n  \"uri\": \"/tokens/revoke\",\n  \"revokedTokensCount\": 3,\n  \"links\": []\n }\n}"
								}
							]
						},
						{
							"name": "Revoke Token with JTI",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{merchantApiKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tokens/:tokenId/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":tokenId",
										"revoke"
									],
									"variable": [
										{
											"key": "tokenId",
											"value": "{{callbackTokenId}}",
											"description": "(Required) Token Id returned by Create Access Token endpoint."
										}
									]
								},
								"description": "The endpoint allows to Revoke to AccessToken"
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/:tokenId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":tokenId",
												"revoke"
											],
											"variable": [
												{
													"key": "tokenId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/:tokenId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":tokenId",
												"revoke"
											],
											"variable": [
												{
													"key": "tokenId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/:tokenId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":tokenId",
												"revoke"
											],
											"variable": [
												{
													"key": "tokenId"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/:tokenId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":tokenId",
												"revoke"
											],
											"variable": [
												{
													"key": "tokenId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31/revoke\",\n \"data\": {\n  \"id\": \"3fe40be4-8139-4bcc-a6fc-9fc6df927b31\",\n  \"uri\": \"/tokens/3fe40be4-8139-4bcc-a6fc-9fc6df927b31/revoke\",\n  \"accessToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpcF9maWx0ZXJpbmciOmZhbHNlLCJhdWQiOlsiZ2siLCJ3ZWJob29rcyIsInBpIiwicm1zIiwiaW5zdGFudCJdLCJvcmlnaW5hdG9yX29yZ19pZCI6ImoyOXAza3BhYngiLCJ1c2VyX2lkIjoid3FqMjlubXhuZSIsInVzZXJfbmFtZSI6InN5c3RlbSIsIm9yZ19pZCI6IiIsInNjb3BlIjpbInVzZXJkaXJlY3QiXSwiZXhwIjoxNTQ0NTM5MzQ3LCJhdXRob3JpdGllcyI6WyJGTV9CdWxrX0NhbmNlbCIsIkJhbmtfVXBkYXRlIiwiSW5zdGFudF9QYXltZW50c19DcmVhdGVfUmVzZXJ2YXRpb24iLCJDcmVkaXRUcmFuc2Zlcl9SZWplY3QiLCJHTE9CQUxfU0VBUkNIIiwiU2NoZW1lX0FkZFVwZGF0ZSIsIkJhbmtHcm91cF9MaXN0Iiwid2ViaG9va19hZG1pbiIsIkN1c3RvbWVyX0VkaXQiLCJCYW5rX0FwcHJvdmFsX0VkaXRvciIsIkFkbWluX1VzZXJfQWN0aXZhdGUiLCJCYW5rX1ZpZXciLCJDcmVkaXRvckFjY291bnRfQWRkIiwiQ3JlZGl0b3JBY2NvdW50X0xpc3RWaWV3IiwiRk1fRUJBX1NlYXJjaCIsIkJhbmtfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0VkaXRTZXR0aW5ncyIsIkNyZWRpdG9yX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX1NlYXJjaCIsIkFQUFJPVkFMX1ZJRVdFUiIsIk51YXBheV9BcHBfTGlzdF9BY2NvdW50cyIsIkJlbmVmaWNpYXJ5X0FkZCIsIkNyZWRpdG9yX1NlY3VyaXR5X1ZpZXciLCJCaWNfUmVhY2hhYmlsaXR5X1ZhbGlkYXRpb24iLCJDcmVkaXRvcl9Db250YWN0X0FkZEVkaXQiLCJCYW5rX1VzZXJfQWN0aXZhdGUiLCJGTV9NYW5kYXRlX1NlYXJjaCIsIkZNX0REX1JfVHJhbnNhY3Rpb25fVmlldyIsIkNvbnRhY3RzX0xpc3RWaWV3QWRkRWRpdCIsIkRlYnRvck1hbmRhdGVfQmxvY2tBY3RpdmF0ZSIsIk51YXBheV9BcHBfTGlzdF9UcmFuc2FjdGlvbnMiLCJCYW5rX1VzZXJfRWRpdCIsIkZNX01hbmRhdGVfRmlsZV9VcGxvYWQiLCJPcmdVbml0X1ZpZXciLCJCYW5rR3JvdXBfV1NfVXNlcl9MaXN0Vmlld0FkZEVkaXQiLCJDcmVkaXRvck1hbmRhdGVfRERfU2VhcmNoIiwiQ2xpZW50X0xhbmdfVmlldyIsIkZNX0JhdGNoX1JldmVyc2UiLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWN0aXZhdGUiLCJPcmdVbml0X0xpc3QiLCJGTV9ERF9WaWV3IiwiQmFua0dyb3VwX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9Vc2VyX1ZpZXciLCJWYWxpZGF0ZV9BY2NvdW50IiwiQ2xhaW1fTGlzdFZpZXciLCJDbGllbnRfTGlzdCIsIkNyZWRpdG9yQWNjb3VudF9FZGl0IiwiQU1MX1NlcnZpY2UiLCJDcmVkaXRvcl9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVkaXRvck1hbmRhdGVfTm9FZGl0QWNjb3VudERldGFpbHMiLCJGTV9CdWxrX1Jldm9rZSIsIkNyZWRpdG9yTWFuZGF0ZV9FZGl0IiwiQ2xpZW50X0FwcHJvdmFsX0VkaXRvciIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfTGlzdFZpZXciLCJCZW5lZmljaWFyeUFjY291bnRfTGlzdFZpZXdBZGRFZGl0IiwiQ3JlZGl0b3JfQ29udGFjdF9MaXN0VmlldyIsIlJvb3RQYXltZW50U2NoZW1lX0xpc3RWaWV3QWRkRWRpdCIsIkFQUFJPVkFMX0VESVRPUiIsIk9yZ1VuaXRfQWRkVXBkYXRlIiwiQmFua0dyb3VwX0FwcHJvdmFsX0VkaXRvciIsIkZNX0JhdGNoX0NhbmNlbCIsIkZNX0REX0xpc3RCYXRjaGVzIiwiUm9sZV9Bc3NpZ25tZW50IiwiQ3JlZGl0VHJhbnNmZXJfQWRkIiwiQ2xpZW50X0FkZCIsIlNjaGVtZV9MaW1pdHNfVmlldyIsIkZNX0JhdGNoX1ZpZXciLCJGTV9UcmFuc2FjdGlvbl9SZXZva2UiLCJNYW5kYXRlQ29sbGVjdGlvbl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfRXhwb3J0IiwiQmFua19FeHBvcnRUaW1lc19WaWV3IiwiQ3JlZGl0b3JTY2hlbWVfQ29udGFjdF9SZW1vdmUiLCJGTV9QYWluMl9GaWxlX0V4cG9ydCIsIkNTTV9MaXN0IiwiQ1NNX1ZpZXciLCJBZ2VuY3lCYW5rX1ZpZXciLCJDbGllbnRfRWRpdExpbWl0cyIsIkZNX0J1bGtfUmV2ZXJzZSIsIkJhbmtfVXNlcl9BZGQiLCJDcmVkaXRvck1hbmRhdGVfQ2FuY2VsIiwiQWdlbmN5QmFua19MaXN0IiwiRk1fQmF0Y2hfUmV2b2tlIiwiU2VhcmNoX1Bvc3RpbmciLCJDcmVkaXRvck1hbmRhdGVfUGF5bWVudF9BZGQiLCJCYW5rR3JvdXBfQXBwcm92YWxfVmlld2VyIiwiQmFua0dyb3VwX1NlY3VyaXR5X0VkaXQiLCJSb2xlX0FkZEVkaXQiLCJPcmlnaW5hdG9yX0V4cG9ydFRpbWVzX0VkaXQiLCJEZWJ0b3JBY2NvdW50X0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfTGlzdCIsIkFkbWluX1VzZXJfQWRkIiwiUm9sZV9MaXN0VmlldyIsIkZNX0NUX1NlYXJjaCIsIkNyZWRpdG9yX1VzZXJfTGlzdCIsIkNyZWRpdFRyYW5zZmVyX0VkaXQiLCJBZG1pbl9Vc2VyX0VkaXQiLCJGTV9NYW5kYXRlX0ZpbGVfU2VhcmNoIiwiQmFua0dyb3VwX1VzZXJfRWRpdCIsIkZNX1RyYW5zYWN0aW9uX0NhbmNlbCIsIkNyZWRpdG9yX1VzZXJfQWN0aXZhdGUiLCJDcmVkaXRvcl9Vc2VyX1ZpZXciLCJDcmVkaXRUcmFuc2Zlcl9MaXN0VmlldyIsIkZNX0REX0ZpbGVfUmV2b2tlIiwiQ2xpZW50X0VkaXQiLCJTY2hlbWVfTGlzdCIsIkRpcmVjdERlYml0X0xpc3RWaWV3IiwiU2NoZW1lX1ZpZXciLCJCYW5rX0FkZCIsIkFnZW5jeUJhbmtfQWRkVXBkYXRlIiwiQ2xpZW50X0FwcHJvdmFsX1ZpZXdlciIsIlZpZXdfT3JpZ2luYXRvcl9SZXBvcnRzIiwiRGVidG9yTWFuZGF0ZV9MaXN0VmlldyIsIkJhbmtHcm91cF9Vc2VyX0RlYWN0aXZhdGUiLCJDcmVhdGVfUG9zdGluZyIsIk9yaWdpbmF0b3JfRXhwb3J0VGltZXNfVmlldyIsIkJhbmtfQXBwcm92YWxfQ29uZmlndXJhdGlvbiIsIkJlbmVmaWNpYXJ5X0xpc3RWaWV3IiwiQ3JlZGl0b3JNYW5kYXRlX0VkaXRBY2NvdW50RGV0YWlscyIsIkZNX0NUX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JfVU1SX0NvbmZpZ3VyYXRpb24iLCJDbGllbnRfTGFuZ19FZGl0IiwiQ3JlZGl0b3JfRmlsZV9VcGxvYWQiLCJDb2xsZWN0aW5nQWNjb3VudF9FZGl0IiwiQmFua0dyb3VwX1VzZXJfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1ZpZXdIaXN0b3J5IiwiQmFua19TY2hlbWVfVmlldyIsIlBheW1lbnRfSW5pdGlhdGlvbl9TZXJ2aWNlX1Byb3ZpZGVyIiwiQ3JlZGl0b3JNYW5kYXRlX0FjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1N1c3BlbmQiLCJDcmVkaXRvclNjaGVtZV9MaXN0VmlldyIsIkNyZWRpdG9yX1dTX1VzZXJfTGlzdFZpZXdBZGRFZGl0IiwiTnVhcGF5X0FwcF9WaWV3X0FjY291bnQiLCJQcm9jZXNzX0luc3RhbnRDcmVkaXRUcmFuc2Zlcl9XZWJob29rcyIsIkNyZWRpdG9yU2NoZW1lX0FjY291bnRfUmVtb3ZlIiwiQ3JlZGl0b3JfU2VjdXJpdHlfRWRpdCIsIkNyZWRpdG9yTWFuZGF0ZV9SZXN1Ym1pdCIsIkJhbmtHcm91cF9VcGRhdGUiLCJDcmVkaXRvcl9Vc2VyX0FkZCIsIkNTTV9BZGRVcGRhdGUiLCJDcmVkaXRvclNjaGVtZV9BZGQiLCJIb2xkaW5nQWNjb3VudF9MaXN0VmlldyIsIkZpbmFuY2lhbEluc3RpdHV0aW9uX0xpc3RWaWV3QWRkRWRpdCIsIkNsYWltX0VkaXRDYW5jZWwiLCJEZWJ0b3JNYW5kYXRlX0FkZEVkaXQiLCJDbGllbnRfQmlsbGluZ0NoYXJnZXNfQ29uZmlndXJhdGlvbiIsIkNyZWRpdG9yU2NoZW1lX09wdGlvbnNfRWRpdCIsIkRpcmVjdERlYml0X0VkaXQiLCJGTV9ERF9GaWxlX0xlZ2FjeV9TZWFyY2giLCJGTV9ERF9GaWxlX1ZpZXciLCJDbGFpbV9BZGRFZGl0IiwiRk1fVHJhbnNhY3Rpb25fUmV2ZXJzZSIsIkZNX0REX1NlYXJjaCIsIkJhbmtfVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX0NvbnRyYWN0X0FkZEVkaXQiLCJGTV9DVF9GaWxlX0V4cG9ydCIsIkRlYnRvckFjY291bnRfQmxvY2tBY3RpdmF0ZSIsIkNsaWVudF9WaWV3IiwiQ3VzdG9tZXJfTGlzdCIsIkNyZWRpdG9yU2NoZW1lX0xpc3RBY2NvdW50IiwiQ3JlZGl0VHJhbnNmZXJfUmVjYWxsIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9MaXN0IiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRfRXhwb3J0IiwiQWRtaW5fVXNlcl9MaXN0IiwiQmFua19CaWxsaW5nQ2hhcmdlc19Db25maWd1cmF0aW9uIiwiQmFua0dyb3VwX1NjaGVtZUxpbWl0c19WaWV3IiwiRGlyZWN0RGViaXRfVW5wYWlkTGlzdFZpZXciLCJQdWJsaWMiLCJBZG1pbl9Vc2VyX1ZpZXciLCJGTV9CdWxrX1NlYXJjaCIsIkJlbmVmaWNpYXJ5X0xpc3RFZGl0IiwiRk1fRERfRmlsZV9Eb3dubG9hZCIsIkludm9rZV9TRFMiLCJDcmVkaXRvck1hbmRhdGVfQWRkIiwiQ3JlZGl0b3JNYW5kYXRlX1BheW1lbnRTY2hlZHVsZV9DYW5jZWwiLCJDdXN0b21lcl9BZGQiLCJDb250YWN0c19FZGl0IiwiRk1fRERfRmlsZV9VcGxvYWQiLCJDcmVkaXRvclNjaGVtZV9BY2NvdW50X0FkZEVkaXQiLCJCYW5rX0V4cG9ydFRpbWVzX0VkaXQiLCJCYW5rR3JvdXBfU2VjdXJpdHlfVmlldyIsIkNsaWVudF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JTY2hlbWVfT3B0aW9uc19WaWV3IiwiQ3JlZGl0b3JMb2dvX0FkZCIsIkZNX0JhdGNoX1NlYXJjaCIsIkJhbmtfVXNlcl9WaWV3IiwiRGlyZWN0RGViaXRfUmV2b2tlIiwiQWRtaW5fVXNlcl9EZWFjdGl2YXRlIiwiQ3JlZGl0b3JNYW5kYXRlX1JlYWN0aXZhdGUiLCJGTV9ERF9GaWxlX1BhaW5fU2VhcmNoIiwiQmFua0dyb3VwX0FkZCIsIk51YXBheV9BcHBfQWNjb3VudCIsIkZNX1BhaW4yX0ZpbGVfVXBsb2FkIiwiQ3JlZGl0b3JNYW5kYXRlX0xpc3RWaWV3IiwiRGlyZWN0RGViaXRfQWRkIiwiRGlyZWN0RGViaXRfQ2FuY2VsIiwiQ3JlZGl0b3JTY2hlbWVfVU1SX0NvbmZpZ3VyYXRpb24iLCJCYW5rX1VzZXJfTGlzdCIsIkJhbmtHcm91cF9BcHByb3ZhbF9Db25maWd1cmF0aW9uIiwiQ3JlZGl0b3JNYW5kYXRlX0ltYWdlVXBsb2FkIiwiQmFua0dyb3VwX1ZpZXciLCJCYW5rX0FwcHJvdmFsX1ZpZXdlciJdLCJqdGkiOiIzZmU0MGJlNC04MTM5LTRiY2MtYTZmYy05ZmM2ZGY5MjdiMzEiLCJjbGllbnRfaWQiOiJvcmlnaXhfZ2tfdXNlciJ9.lAR5VFVcLaWNTdk43pbsk3bs3jOqWdedOi9RsGDYsNNl94yvHOh09wgzp822V2SnF_Ca4O9f_-Agn1iACKO71Gq9u2kgfpZGE03xURZXlzfmkZXQrOw7JvSlBQ_QeSe5xhhquHvIvYk8bH8Zg114J-BobaiKKf66vAgj8jkevg_sJah0kLecxNpVey33zSLIfzo3xB-Gq9l_qkkU37TGmOrykUYGF9YLLwQ2wnHu7jPzdL5WmU6sFW3bzDsGVztWRzCrkltCPcW42LvHBnWDWK1lCOjPqSW8nRKlZfKgRfmvQxBG5DYxEt14tPqAvEofYWcDKgdS_xZa4ELytZsuQQ\",\n  \"tokenType\": \"BEARER\",\n  \"accessType\": \"CR\",\n  \"expityTime\": 1545062272000,\n  \"scopes\": [\n   \"openbanking_pisp\",\n   \"bankadmin\",\n   \"admin\"\n  ],\n  \"ipFiltering\": true,\n  \"requestedOrganisation\": \"ybo8zd8j2q\",\n  \"requestingOrganisation\": \"ybo8zd8j2q\",\n  \"status\": \"REVOKED\",\n  \"createdTimestamp\": 1544975872000,\n  \"revokedTimestamp\": 1545062272000,\n  \"links\": []\n }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/tokens/:tokenId/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":tokenId",
												"revoke"
											],
											"variable": [
												{
													"key": "tokenId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": [\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"description\": \"<string>\",\n   \"field\": \"<string>\",\n   \"resourceUri\": \"<string>\"\n  }\n ],\n \"returnCode\": \"<string>\",\n \"returnDescription\": \"<string>\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "27dfdacc-0922-4b76-829d-3c5843fe28c4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5b34f6c4-ca3c-436c-9920-e31b1b8fb446",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4cfdeb99-860e-43f4-8b89-b577661e9cd8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f9bd80ba-8439-485f-9ab9-6030e3db98ed",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5c43756e-73b5-42de-b29a-95b61ac539ce",
			"key": "baseUrl",
			"value": "https://sandbox.nuapay.com",
			"type": "string"
		},
		{
			"id": "c6c374d7-cf60-4347-ba92-b1ce81457f49",
			"key": "baseUrlTpp",
			"value": "https://sandbox.nuapay.com/tpp",
			"type": "string"
		},
		{
			"id": "e96c6668-ff14-4665-b440-017b6fa9a0eb",
			"key": "merchantApiKey",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}